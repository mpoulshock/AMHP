(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    215812,       5270]
NotebookOptionsPosition[    203184,       4855]
NotebookOutlinePosition[    203542,       4871]
CellTagsIndexPosition[    203499,       4868]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["An Abstract Model of Historical Processes - Code", "Chapter",
 CellChangeTimes->{{3.6611028124537163`*^9, 3.6611028217419167`*^9}}],

Cell[CellGroupData[{

Cell["Context", "Section",
 CellChangeTimes->{{3.66110289466146*^9, 3.66110289655017*^9}}],

Cell[TextData[{
 "This ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook implements a sociological model of power struggles described in \
my (draft) paper ",
 StyleBox["An Abstract Model of Historical Processes",
  FontWeight->"Bold"],
 ".  For more information, please see the paper itself, which can be found \
at: https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2818471.\n\nAuthor: \
Michael Poulshock, Drexel University Thomas R. Kline School of Law, \
mp988@drexel.edu, mpoulshock@gmail.com."
}], "Text",
 CellChangeTimes->{{3.6611028341191683`*^9, 3.661102836338821*^9}, {
  3.6611029393824663`*^9, 3.661102968300054*^9}, {3.661103011622808*^9, 
  3.6611030774343576`*^9}, {3.6611031097486277`*^9, 3.6611031149754477`*^9}, {
  3.661103650808453*^9, 3.661103722022044*^9}, {3.6611038167161207`*^9, 
  3.66110383184408*^9}, {3.661122956149151*^9, 3.661122964282988*^9}, {
  3.661356091406527*^9, 3.6613561234641438`*^9}, {3.6636022734024677`*^9, 
  3.663602308393384*^9}, {3.673462136106554*^9, 3.673462210081831*^9}, {
  3.6777535297992163`*^9, 3.677753530776042*^9}, {3.678110223352848*^9, 
  3.678110260698831*^9}, {3.678875219222651*^9, 3.678875243419467*^9}, {
  3.678875306022954*^9, 3.6788753571375732`*^9}, {3.687209724751861*^9, 
  3.6872097269089317`*^9}, {3.687209766902021*^9, 3.68720977185567*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Implementation", "Section",
 CellChangeTimes->{{3.6611037482363358`*^9, 3.6611037519361*^9}}],

Cell[CellGroupData[{

Cell["Data Structures", "Subsection",
 CellChangeTimes->{{3.673281336548708*^9, 3.673281339096736*^9}, 
   3.6781111157992973`*^9, {3.678111241754593*^9, 3.678111244299871*^9}, 
   3.6867298043981667`*^9}],

Cell[CellGroupData[{

Cell["Tactic matrix", "Subsubsection",
 CellChangeTimes->{{3.673299468171687*^9, 3.673299472911419*^9}}],

Cell["\<\
An example of a tactic matrix (representing all of the agents\
\[CloseCurlyQuote] tactic vectors), displayed in matrix form.  Each agent is \
allocating half of its power to itself, as indicated by the main diagonal.  \
Note that the absolute values of the cells in each column sum to one.\
\>", "Text",
 CellChangeTimes->{{3.661105584603468*^9, 3.661105639352379*^9}, {
  3.661105672136826*^9, 3.6611056981894093`*^9}, {3.66110575054075*^9, 
  3.66110575070109*^9}, {3.661109536108026*^9, 3.66110959992196*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.5", ",", "0.3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.5"}], ",", "0.7"}], "}"}]}], "}"}], "//", " ", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.661105616764428*^9, 3.6611056674560633`*^9}, {
   3.66110572634722*^9, 3.66110577551363*^9}, {3.6613504850882397`*^9, 
   3.661350490593739*^9}, {3.663265005674308*^9, 3.66326500692552*^9}, 
   3.673039607538753*^9, 3.673299502257924*^9, {3.678110296963069*^9, 
   3.678110311626062*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.5`", "0.3`"},
     {
      RowBox[{"-", "0.5`"}], "0.7`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6611056554912977`*^9, 3.6611056692404413`*^9}, {
   3.661105741597748*^9, 3.6611057763130503`*^9}, 3.661350491292426*^9, 
   3.661350527069569*^9, 3.663265007735503*^9, 3.673299503633894*^9, {
   3.6781103020176277`*^9, 3.67811031272195*^9}}]
}, Open  ]],

Cell["The tactic matrix is composed of each agent\[CloseCurlyQuote]s tactic \
vector:", "Text",
 CellChangeTimes->{{3.661350580270315*^9, 3.661350601958345*^9}, {
  3.661351071581596*^9, 3.661351074713139*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5"}], ",", "0.7"}], "}"}]}], "}"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.661350610356042*^9, 3.661350626735372*^9}, {
   3.6632650105002317`*^9, 3.663265012128372*^9}, 3.673039608963808*^9, {
   3.673299513977213*^9, 3.6732995209162283`*^9}, 3.678110320259502*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5`", ",", 
   RowBox[{"-", "0.5`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.673299521543333*^9, 3.678110321611328*^9}]
}, Open  ]],

Cell["\<\
The absolute value of a tactic vector must always sum to one:\
\>", "Text",
 CellChangeTimes->{{3.661105440355419*^9, 3.661105464109033*^9}, {
  3.6611054993189707`*^9, 3.661105511870256*^9}, {3.6732995250079937`*^9, 
  3.6732995264148197`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"Abs", "[", "%", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.661105466123303*^9, 3.6611054751132298`*^9}, 
   3.661350658150239*^9}],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{3.6611054757844543`*^9, 3.6613506595109787`*^9, 
  3.6732995285424623`*^9, 3.678110323565124*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Game state", "Subsubsection",
 CellChangeTimes->{{3.673281650297721*^9, 3.673281652028255*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["game state",
  FontSlant->"Italic"],
 " is represented as an association that includes agent sizes, a tactic \
matrix, a utility vector, and a distance vector."
}], "Text",
 CellChangeTimes->{{3.67329923939219*^9, 3.6732993137631493`*^9}, {
  3.677753502584754*^9, 3.677753510575326*^9}, {3.678110652020722*^9, 
  3.6781106543203583`*^9}, {3.678110747749786*^9, 3.678110753556567*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\"\<sizes\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"4.3", ",", "4.2"}], "}"}]}], ",", 
   RowBox[{"\"\<tactics\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\"\<util\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2.2", ",", "2.1"}], "}"}]}], ",", 
   RowBox[{"\"\<dx\>\"", "\[Rule]", "0.1"}]}], 
  "\[RightAssociation]"}]], "Input",
 CellChangeTimes->{{3.675613415363093*^9, 3.675613471329142*^9}, {
   3.677753474351256*^9, 3.677753488348837*^9}, 3.678110646446787*^9, {
   3.678110757730147*^9, 3.67811077453677*^9}, {3.687209820823546*^9, 
   3.687209833387617*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsubsection",
 CellChangeTimes->{{3.673281913522031*^9, 3.6732819185777073`*^9}, {
   3.673282817954853*^9, 3.673282819295746*^9}, {3.673303183657606*^9, 
   3.6733031860878897`*^9}, 3.673303225187503*^9, {3.6867222084753036`*^9, 
   3.686722209412183*^9}}],

Cell["\<\
The meaning and ranges of the parameters are as follows (see the paper for \
details):\
\>", "Text",
 CellChangeTimes->{3.6872118618052483`*^9}],

Cell[TextData[Cell[BoxData[GridBox[{
   {
    StyleBox["n",
     FontWeight->"Bold"], 
    RowBox[{"Number", " ", "of", " ", "players"}], 
    RowBox[{
     RowBox[{"\[Element]", 
      RowBox[{"[", 
       RowBox[{"1", ",", "\[Infinity]"}]}]}], ")"}], "Int"},
   {
    StyleBox["\[Alpha]",
     FontWeight->"Bold"], 
    RowBox[{"Utility", " ", "exponent"}], 
    RowBox[{"\[Element]", 
     RowBox[{"[", 
      RowBox[{"2", ",", "3"}], "]"}]}], "Real"},
   {
    StyleBox["\[Beta]",
     FontWeight->"Bold"], 
    RowBox[{"Benevolence", " ", "multiplier"}], 
    RowBox[{"\[Element]", 
     RowBox[{"(", 
      RowBox[{"0", ",", "\[Mu]"}], ")"}]}], "Real"},
   {
    StyleBox["\[Mu]",
     FontWeight->"Bold"], 
    RowBox[{"Malevolence", " ", "multiplier"}], 
    RowBox[{"\[Element]", 
     RowBox[{"(", 
      RowBox[{"\[Beta]", ",", "\[Infinity]"}], ")"}]}], "Real"},
   {
    StyleBox["\[Delta]",
     FontWeight->"Bold"], 
    RowBox[{"Discounting", " ", "factor"}], 
    RowBox[{"\[Element]", 
     RowBox[{"(", 
      RowBox[{"0", ",", "1"}], ")"}]}], "Real"},
   {
    StyleBox["\[Sigma]",
     FontWeight->"Bold"], 
    RowBox[{"Coefficient", " ", "of", " ", "inertia"}], 
    RowBox[{
     RowBox[{"\[Element]", 
      RowBox[{"(", 
       RowBox[{"0", ",", "n"}]}]}], "]"}], "Real"},
   {"breadth", 
    RowBox[{"Tactics", " ", "per", " ", "player"}], 
    RowBox[{
     RowBox[{"\[Element]", 
      RowBox[{"[", 
       RowBox[{"1", ",", "\[Infinity]"}]}]}], ")"}], "Int"},
   {"depth", 
    RowBox[{
     RowBox[{"Tactics", "/", "player"}], " ", "in", " ", "search", " ", "for",
      " ", "Nash", " ", "equilibria"}], 
    RowBox[{
     RowBox[{"\[Element]", 
      RowBox[{"[", 
       RowBox[{"1", ",", "\[Infinity]"}]}]}], ")"}], "Int"},
   {"probes", 
    RowBox[{
     RowBox[{"No", ".", " ", "of"}], " ", "searches", " ", "for", " ", 
     "intertemporal", " ", "equilibria"}], 
    RowBox[{
     RowBox[{"\[Element]", 
      RowBox[{"[", 
       RowBox[{"1", ",", "\[Infinity]"}]}]}], ")"}], "Int"},
   {"nearness", 
    RowBox[{"Tactical", " ", "variation", " ", "in", " ", "simulation"}], 
    RowBox[{
     RowBox[{"\[Element]", 
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}]}]}], "]"}], "Real"}
  },
  GridBoxDividers->{
   "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
    "RowsIndexed" -> {}}]]]], "Text",
 CellChangeTimes->{{3.677753007728971*^9, 3.6777530280992527`*^9}, {
  3.6777530754078827`*^9, 3.677753377553616*^9}, {3.677765131322843*^9, 
  3.677765131323216*^9}, {3.677765173049201*^9, 3.677765178001193*^9}, {
  3.677765259457402*^9, 3.677765296298462*^9}, {3.678013916629424*^9, 
  3.678013919752777*^9}, {3.6781104698554487`*^9, 3.6781104706801453`*^9}, {
  3.6867223597240553`*^9, 3.686722372992565*^9}, {3.687171150893503*^9, 
  3.687171150893998*^9}, {3.687171486963736*^9, 3.687171487821495*^9}, {
  3.6872117124120626`*^9, 3.6872118930379057`*^9}}],

Cell["They are set as global variables:", "Text",
 CellChangeTimes->{{3.686722390066079*^9, 3.686722394452282*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Model", " ", "Parameters"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]", "=", "2.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Delta]", "=", "0.8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Simulation", " ", "Parameters"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"breadth", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"depth", "=", "15"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"probes", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nearness", "=", "1"}], ";", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{"higher", " ", "=", " ", 
      RowBox[{"more", " ", "variation"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Derived", " ", "Data", " ", "Structures"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"discountVector", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Delta]", "^", "i"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{"depth", "-", "1"}]}], "}"}]}], "]"}]}], ";"}]}]}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.6867222314069843`*^9, 3.686722344518896*^9}, {
   3.6867234961948957`*^9, 3.6867235116005497`*^9}, {3.6867284994726067`*^9, 
   3.6867285029610853`*^9}, {3.686863580351327*^9, 3.686863580773994*^9}, 
   3.68711014500806*^9, {3.687110475837887*^9, 3.687110495083723*^9}, {
   3.687126381760249*^9, 3.687126385667019*^9}, 3.687126553124859*^9, 
   3.687126677832451*^9, 3.6871267437829647`*^9, {3.6871292226842527`*^9, 
   3.687129272645928*^9}, {3.687129963958108*^9, 3.687129964834071*^9}, {
   3.687169665616015*^9, 3.6871696944297132`*^9}, 3.6871707235127974`*^9, {
   3.687171055919029*^9, 3.687171056314488*^9}, {3.687171158042021*^9, 
   3.6871712310431147`*^9}, {3.687171366099351*^9, 3.6871713670173388`*^9}, 
   3.687171456531378*^9, {3.687171656390408*^9, 3.6871716653805923`*^9}, {
   3.68717429584385*^9, 3.687174296213933*^9}, {3.6871743768038597`*^9, 
   3.68717440184087*^9}, {3.6872084678102207`*^9, 3.687208484976768*^9}, {
   3.687208519709676*^9, 3.687208538435883*^9}, {3.68721290573276*^9, 
   3.687212909200972*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reel", "Subsubsection",
 CellChangeTimes->{{3.673282216852942*^9, 3.673282217278594*^9}, {
   3.673292716145336*^9, 3.67329271938431*^9}, 3.6781103823732643`*^9}],

Cell[TextData[{
 "A ",
 StyleBox["reel",
  FontSlant->"Italic"],
 " is a list of game states that can be played frame-by-frame to illustrate \
the evolution of a system of interacting, power-seeking agents."
}], "Text",
 CellChangeTimes->{{3.6781103477261744`*^9, 3.6781104245605392`*^9}, {
  3.678110461378601*^9, 3.6781104622004023`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"state0", ",", " ", "state1", ",", " ", "..."}], "}"}]], "Input",
 CellChangeTimes->{{3.673286757795534*^9, 3.6732867648173018`*^9}, {
   3.673292669563195*^9, 3.673292671954674*^9}, 3.673298543195031*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Game State", "Subsection",
 CellChangeTimes->{{3.66110431851129*^9, 3.661104322657341*^9}, {
  3.678111110712034*^9, 3.678111114145075*^9}}],

Cell[CellGroupData[{

Cell["Nearby tactics", "Subsubsection",
 CellChangeTimes->{{3.656138021878718*^9, 3.656138034248176*^9}, {
   3.661111127938006*^9, 3.6611111302834387`*^9}, 3.661112260679174*^9}],

Cell["\<\
Given a random vector, this function adjusts its length so as to make it a \
legal tactic.  A legal tactic is a point on the surface of a cross-polytope \
whose dimension is equal to the number of agents.  The visualization below \
illustrates this shape for a population of three agents.  We assume that \
agents do not harm themselves.\
\>", "Text",
 CellChangeTimes->{{3.65607395481929*^9, 3.656074018261138*^9}, {
  3.661111261801856*^9, 3.661111351245821*^9}, {3.661112125725568*^9, 
  3.661112152345768*^9}, {3.673948767544313*^9, 3.673948783780395*^9}, {
  3.674513985899798*^9, 3.67451400639814*^9}, {3.678110535341177*^9, 
  3.678110537337822*^9}, {3.678886561006007*^9, 3.678886576095045*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"normalize", "[", "vector_", "]"}], " ", ":=", " ", 
  RowBox[{"N", "[", 
   RowBox[{"vector", " ", "/", " ", 
    RowBox[{"Total", "[", 
     RowBox[{"Abs", "[", "vector", "]"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.656073928496524*^9, 3.656073945716627*^9}, {
   3.65607410351453*^9, 3.656074106388611*^9}, 3.661111378051611*^9}],

Cell[TextData[{
 "Try using ",
 StyleBox["Round", "Input"],
 " to improve performance?"
}], "Text",
 CellChangeTimes->{{3.674513988276641*^9, 3.6745140021072073`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"normalize", "[", "vector_", "]"}], " ", ":=", 
  RowBox[{"Round", "[", 
   RowBox[{
    RowBox[{"vector", " ", "/", " ", 
     RowBox[{"Total", "[", 
      RowBox[{"Abs", "[", "vector", "]"}], "]"}]}], ",", "0.001"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.673948809560439*^9, 3.673948810923603*^9}, {
   3.673948841102866*^9, 3.673948848591715*^9}, 3.673948929300618*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normalize", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "22", ",", "1", ",", 
    RowBox[{"-", "4"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.656074074301691*^9, 3.65607407970485*^9}, {
   3.656074111710931*^9, 3.656074119699662*^9}, 3.661111385023473*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.1`", ",", "0.7333333333333333`", ",", "0.03333333333333333`", ",", 
   RowBox[{"-", "0.13333333333333333`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.656074080415341*^9, 3.656074120422385*^9}, 
   3.66111139137702*^9, 3.67394885204344*^9, 3.687171783620955*^9}]
}, Open  ]],

Cell["\<\
Finds tactics \[OpenCurlyDoubleQuote]near\[CloseCurlyDoubleQuote] a given \
tactic.  Method: Add random variates to each element of the input tactic, \
then normalize the vector so it is on the surface of the cross polytope.  If \
the vector contains negative tactic for a given agent (indicating self-harm), \
ignore the result and look for a new nearby random tactic. \
\>", "Text",
 CellChangeTimes->{{3.656139831816712*^9, 3.6561398948529463`*^9}, {
   3.6561403849978867`*^9, 3.65614043824867*^9}, {3.6561783542489223`*^9, 
   3.6561783743350067`*^9}, 3.656680823007085*^9, {3.656698341227572*^9, 
   3.656698446563471*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomTacticNear", "[", 
   RowBox[{"point_", ",", " ", "agentIndex_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "newRaw", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newRaw", " ", "=", " ", 
      RowBox[{"point", " ", "+", " ", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "nearness"}], "]"}], ",", 
         RowBox[{"Length", "[", "point", "]"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newRaw", "[", 
       RowBox[{"[", "agentIndex", "]"}], "]"}], "=", 
      RowBox[{"Abs", "[", 
       RowBox[{"newRaw", "[", 
        RowBox[{"[", "agentIndex", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"normalize", "[", "newRaw", "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.656686939988573*^9, 3.656686980968339*^9}, {
   3.656687136467163*^9, 3.656687152392796*^9}, {3.6566872106544456`*^9, 
   3.656687250337359*^9}, {3.656687291763891*^9, 3.6566872939866743`*^9}, {
   3.6566873666665173`*^9, 3.65668736990742*^9}, {3.656687479785768*^9, 
   3.656687481770088*^9}, 3.656687643434372*^9, {3.656698052857792*^9, 
   3.656698108768836*^9}, {3.656698175304378*^9, 3.656698186748369*^9}, {
   3.656698835839147*^9, 3.656698926451024*^9}, {3.656698994857892*^9, 
   3.656699036076028*^9}, 3.661111398741582*^9, {3.661111707097649*^9, 
   3.661111718689492*^9}, {3.6733007388814297`*^9, 3.673300746321395*^9}, {
   3.673300780941524*^9, 3.6733007875910673`*^9}, {3.6867225245512657`*^9, 
   3.686722537208053*^9}, {3.6867227343579607`*^9, 3.686722735290073*^9}, {
   3.687171351598845*^9, 3.687171352598198*^9}}],

Cell["Same as above, but it generates a list of nearby tactics:", "Text",
 CellChangeTimes->{{3.661111915681347*^9, 3.661111926161778*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomTacticsNear", "[", 
   RowBox[{"point_", ",", " ", "a_", ",", "numberOfTactics_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"randomTacticNear", "[", 
     RowBox[{"point", ",", " ", "a"}], "]"}], ",", "numberOfTactics"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.656680738853199*^9, 3.656680764162167*^9}, {
   3.656681237387196*^9, 3.656681239711792*^9}, {3.6733008060078983`*^9, 
   3.673300807401492*^9}, {3.686722797437888*^9, 3.686722798311509*^9}, {
   3.686722868939159*^9, 3.686722869641382*^9}, 3.686753947827178*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"randomTacticNear", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", " ", "1"}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.6566874049962387`*^9, 3.656687413010385*^9}, {
   3.661111730285582*^9, 3.6611117304595547`*^9}, {3.686722580377425*^9, 
   3.68672258999366*^9}, {3.686722655811363*^9, 3.686722657443564*^9}, {
   3.686722743128345*^9, 3.686722744148774*^9}, 3.686722789091708*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9998949562643337`", ",", 
   RowBox[{"-", "0.000012544068601335792`"}], ",", 
   "0.00009249966706497752`"}], "}"}]], "Output",
 CellChangeTimes->{{3.656687414010518*^9, 3.6566874191807423`*^9}, {
   3.656698237262554*^9, 3.656698247337289*^9}, {3.656698934212748*^9, 
   3.6566989394624643`*^9}, {3.656699048715507*^9, 3.656699053778347*^9}, {
   3.661111731112253*^9, 3.661111733819319*^9}, {3.6733008146086082`*^9, 
   3.673300815993608*^9}, {3.6867225558347187`*^9, 3.686722608471242*^9}, {
   3.6867226675778723`*^9, 3.686722707048884*^9}, {3.686722744941115*^9, 
   3.686722789875074*^9}, {3.68672282233613*^9, 3.6867228403154383`*^9}, 
   3.686722875745904*^9, 3.6871716925764523`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"randomTacticsNear", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", " ", "1", ",", "5"}], " ",
    "]"}], " ", "//", " ", "Column"}]], "Input",
 CellChangeTimes->{{3.6566808486383553`*^9, 3.6566808734103403`*^9}, {
   3.656680906079324*^9, 3.6566809297844667`*^9}, {3.656698195442692*^9, 
   3.656698232940371*^9}, {3.656698944685464*^9, 3.656698978425609*^9}, 
   3.656699046306975*^9, {3.686722611836956*^9, 3.68672261239185*^9}, 
   3.686722793845096*^9, 3.686753953283592*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"0.9998926775768122`", ",", "0.00003966055953530146`", ",", 
       RowBox[{"-", "0.00006766186365244595`"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "0.999997956523782`", ",", "6.450487532916091`*^-7", ",", 
       "1.3984274648500724`*^-6"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "0.9999337353090958`", ",", "0.00004419195578071064`", ",", 
       "0.000022072735123440695`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0.99967106227234`", ",", "0.00009669888585975885`", ",", 
       RowBox[{"-", "0.00023223884180006638`"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "0.9999859695129802`", ",", "5.701233175702478`*^-6", ",", 
       "8.32925384392878`*^-6"}], "}"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.6566809102100973`*^9, 3.65668094387353*^9}, {
   3.6566818554381227`*^9, 3.656681859566998*^9}, 3.656698132489386*^9, {
   3.6566981909318457`*^9, 3.656698233752202*^9}, {3.6566989306282673`*^9, 
   3.6566989788422194`*^9}, {3.6566990409734783`*^9, 3.656699046719068*^9}, 
   3.661111745283659*^9, 3.67330081781279*^9, {3.686722613346949*^9, 
   3.686722634151864*^9}, {3.6867228241114683`*^9, 3.686722873921022*^9}, 
   3.686753955134458*^9, 3.6871716955689077`*^9}]
}, Open  ]],

Cell[TextData[{
 "A cross-polytope in dimension 3 is an octahedron, shown below.  Legal \
tactics are points on the surface of this shape.  The widget below starts \
from a given point (",
 StyleBox["pt", "Input"],
 ") and then generates random points nearby, where the slider controls the \
degree of nearness."
}], "Text",
 CellChangeTimes->{{3.661111944628956*^9, 3.661111998138729*^9}, {
  3.661112039729795*^9, 3.6611120941828136`*^9}, {3.661112210556345*^9, 
  3.6611122125254517`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pt", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "0.1", ",", "0.2"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nearness", "=", "near"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Graphics3D", "[", 
         RowBox[{"Scale", "[", 
          RowBox[{
           RowBox[{"PolyhedronData", "[", 
            RowBox[{"\"\<Octahedron\>\"", ",", "\"\<Faces\>\""}], "]"}], ",", 
           "1.4", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics3D", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
           RowBox[{"Point", "[", "pt", "]"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics3D", "[", 
         RowBox[{
          RowBox[{"Point", "[", 
           RowBox[{"randomTacticsNear", "[", 
            RowBox[{"pt", ",", "3", ",", "100"}], "]"}], " ", "]"}], ",", " ", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"near", ",", "0.0001", ",", "1"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.661111766102489*^9, 3.661111768461783*^9}, {
   3.661111804849311*^9, 3.6611118801642313`*^9}, {3.661112005235756*^9, 
   3.661112028921836*^9}, {3.686722919427559*^9, 3.686722941478863*^9}, {
   3.687171327276431*^9, 3.687171335501401*^9}, 3.687171746826601*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`near$$ = 0.524, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`near$$], 0.0001, 1}}, Typeset`size$$ = {
    360., {193., 198.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`near$1324$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`near$$ = 0.0001}, 
      "ControllerVariables" :> {
        Hold[$CellContext`near$$, $CellContext`near$1324$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`pt = {0.7, 0.1, 
         0.2}; $CellContext`nearness = $CellContext`near$$; Show[{
          Graphics3D[
           Scale[
            PolyhedronData["Octahedron", "Faces"], 1.4, {0, 0, 0}]], 
          Graphics3D[{
            PointSize[0.02], 
            Point[$CellContext`pt]}], 
          Graphics3D[
           Point[
            $CellContext`randomTacticsNear[$CellContext`pt, 3, 100]], 
           PlotRange -> {{-1, 1}, {-1, 1}, {-1, 1}}]}]), 
      "Specifications" :> {{$CellContext`near$$, 0.0001, 1}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{405., {238., 244.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.661111771999785*^9, {3.6611118086038*^9, 3.661111880698121*^9}, {
   3.661112007047406*^9, 3.661112029418116*^9}, 3.673300824787053*^9, {
   3.6867229278220863`*^9, 3.686722942548707*^9}, {3.687171338054175*^9, 
   3.687171372034979*^9}, 3.687171539057268*^9, {3.68717173191406*^9, 
   3.687171747727626*^9}, 3.687208890319255*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nearby matrices", "Subsubsection",
 CellChangeTimes->{{3.6560754598270187`*^9, 3.6560754791381197`*^9}, {
  3.656180141409623*^9, 3.6561801513170567`*^9}, {3.6611129518809977`*^9, 
  3.661112952117002*^9}, {3.66111948698022*^9, 3.6611194877820663`*^9}, {
  3.661120316113364*^9, 3.661120317815629*^9}}],

Cell["\<\
This function takes a tactic matrix and returns a random \
\[OpenCurlyDoubleQuote]nearby\[CloseCurlyDoubleQuote] matrix in which every \
agent\[CloseCurlyQuote]s tactic is near their old one.\
\>", "Text",
 CellChangeTimes->{{3.656428685437171*^9, 3.656428690475675*^9}, {
  3.661119436054735*^9, 3.661119482883189*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomMatrixNear", "[", "m_", "]"}], " ", ":=", " ", 
  RowBox[{"Transpose", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"randomTacticNear", "[", 
      RowBox[{
       RowBox[{"m", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "a"}], "]"}], "]"}], ",", " ", "a"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.656425911502994*^9, 3.6564259784268827`*^9}, {
   3.656429576084715*^9, 3.656429590631974*^9}, {3.661119504608203*^9, 
   3.6611195054083157`*^9}, {3.673300959253044*^9, 3.673300961302042*^9}, {
   3.686723018239936*^9, 3.686723024258206*^9}, {3.6867230609551477`*^9, 
   3.686723067325892*^9}, 3.686723538857445*^9, {3.687109025749398*^9, 
   3.687109032758052*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"randomMatrixNear", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.5", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.5", ",", 
       RowBox[{"-", "0.1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0.9"}], "}"}]}], "}"}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.656429598700576*^9, 3.656429600907716*^9}, {
   3.65668018406421*^9, 3.6566801866061487`*^9}, {3.661119508237975*^9, 
   3.661119525656774*^9}, {3.674563522498543*^9, 3.67456352825874*^9}, 
   3.686723074769762*^9, 3.686723570457374*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.499849504202601`", ",", "0.49334748774179565`", ",", 
     RowBox[{"-", "0.0010598906987583832`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.49196624898569896`", ",", "0.4921712789860619`", ",", 
     RowBox[{"-", "0.09487065351150305`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.008184246811699956`", ",", 
     RowBox[{"-", "0.014481233272142607`"}], ",", "0.9040694557897385`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.656429569086279*^9, 3.656429639791209*^9}, {
   3.656606599622707*^9, 3.656606627255122*^9}, {3.656680187716628*^9, 
   3.656680192128133*^9}, {3.656681286061119*^9, 3.65668128793856*^9}, 
   3.65670958080068*^9, {3.6611195200383167`*^9, 3.661119533189691*^9}, 
   3.673301171188134*^9, {3.674563515982687*^9, 3.674563528798169*^9}, {
   3.686723075542392*^9, 3.686723082555641*^9}, {3.6867235428229303`*^9, 
   3.686723571559786*^9}, {3.687109012863295*^9, 3.687109035301408*^9}}]
}, Open  ]],

Cell[TextData[{
 "For each agent, generate a list of random tactics.  Then, given those \
tactics, generate an ensemble of random tactic matrices, representing all \
combinations of all agents\[CloseCurlyQuote] tactics.  The total number of \
matrices created is ",
 StyleBox["breadth^n", "Input"],
 ".  For performance reasons, this function does not use ",
 StyleBox["randomMatrixNear", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.6560855994153147`*^9, 3.656085642390202*^9}, {
  3.6560860110230427`*^9, 3.6560860273469753`*^9}, {3.656086169637865*^9, 
  3.6560861899764757`*^9}, {3.661119704857275*^9, 3.661119707014249*^9}, {
  3.661120204620894*^9, 3.661120223323679*^9}, {3.673301041645802*^9, 
  3.673301060085148*^9}, {3.687211132700769*^9, 3.687211136806386*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrixPermutations", "[", "m_", "]"}], " ", ":=", " ", 
  RowBox[{"Map", "[", 
   RowBox[{"Transpose", ",", 
    RowBox[{"Tuples", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"randomTacticsNear", "[", 
        RowBox[{
         RowBox[{"m", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "a"}], "]"}], "]"}], ",", " ", "a", ",", 
         "breadth"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6565867860833635`*^9, 3.6565867989436765`*^9}, {
   3.6566812532345324`*^9, 3.6566812609286118`*^9}, {3.661119970802593*^9, 
   3.661119975094201*^9}, 3.661120032606143*^9, {3.661120076738215*^9, 
   3.661120077571536*^9}, {3.6733009754844217`*^9, 3.6733009776464148`*^9}, 
   3.673888074976172*^9, {3.6738881380892467`*^9, 3.673888139139751*^9}, {
   3.674427184827159*^9, 3.674427213345491*^9}, {3.67442724515807*^9, 
   3.674427255179534*^9}, {3.6867231750449677`*^9, 3.686723191018965*^9}, {
   3.68672323929251*^9, 3.6867232439162703`*^9}, {3.686723277177771*^9, 
   3.686723277667212*^9}, 3.686723550619938*^9, 3.687109002434849*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrixPermutations", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.5", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.5", ",", 
       RowBox[{"-", "0.1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0.9"}], "}"}]}], "}"}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.656360945064438*^9, 3.656360958349657*^9}, 
   3.656680004929344*^9, 3.656681356688409*^9, {3.656709799071474*^9, 
   3.656709800220396*^9}, 3.6611201084886227`*^9, {3.674427087972562*^9, 
   3.674427166964658*^9}, {3.674427224267961*^9, 3.674427235304435*^9}, 
   3.686723253990923*^9, 3.68672347352745*^9, 3.6867551709375772`*^9}],

Cell["\<\
From a given tactic matrix, generate a sequence of random matrices in which \
each one is \[OpenCurlyDoubleQuote]near\[CloseCurlyDoubleQuote] the prior one.\
\>", "Text",
 CellChangeTimes->{{3.686981871527178*^9, 3.686981907062199*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomMatrixSequence", "[", "m_", "]"}], " ", ":=", " ", 
  RowBox[{"Rest", "[", 
   RowBox[{"NestList", "[", 
    RowBox[{"randomMatrixNear", ",", "m", ",", "depth"}], "]"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.686981857746449*^9, 3.686981867214447*^9}, {
  3.686982265378366*^9, 3.68698227345533*^9}, {3.686986538767066*^9, 
  3.686986543333543*^9}}],

Cell[BoxData[
 RowBox[{"randomMatrixSequence", "[", 
  RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.686982275522422*^9, 3.6869822862328787`*^9}, {
  3.686982389970269*^9, 3.6869823929661427`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["New game state", "Subsubsection",
 CellChangeTimes->{{3.673644007964912*^9, 3.673644009429212*^9}, {
  3.673644112834283*^9, 3.67364411334208*^9}}],

Cell["Creates a new game state object:", "Text",
 CellChangeTimes->{{3.673644014741767*^9, 3.6736440268378487`*^9}, {
  3.678110796351482*^9, 3.678110809778256*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"newState", "[", 
   RowBox[{"sizes_", ",", "tactics_"}], "]"}], ":=", " ", 
  "\[IndentingNewLine]", " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\"\<sizes\>\"", "\[Rule]", "sizes"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<tactics\>\"", "\[Rule]", "tactics"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<util\>\"", "\[Rule]", 
     RowBox[{"utility", "[", "sizes", "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<dx\>\"", "\[Rule]", "0"}]}], " ", 
   "\[RightAssociation]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6736438256010723`*^9, 3.673643923839637*^9}, {
   3.673643958216683*^9, 3.673643999219006*^9}, {3.6741347716937857`*^9, 
   3.674134772367887*^9}, {3.674751846757329*^9, 3.674751856725263*^9}, {
   3.675604534301339*^9, 3.675604538206883*^9}, {3.675604697324479*^9, 
   3.675604697590345*^9}, {3.6768937362621803`*^9, 3.676893774066062*^9}, {
   3.676894445364437*^9, 3.67689445509875*^9}, {3.677150671477004*^9, 
   3.677150682909816*^9}, {3.678110598878175*^9, 3.678110601280881*^9}, {
   3.6781106738737707`*^9, 3.678110674280099*^9}, {3.6781107222448997`*^9, 
   3.6781107240643806`*^9}, {3.6867236532454357`*^9, 3.6867236669033937`*^9}, 
   3.6867236989919777`*^9, 3.6871275315295277`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newState", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.5", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.5", ",", 
       RowBox[{"-", "0.1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0.9"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6736440453929977`*^9, 3.673644086474451*^9}, {
   3.675604700062682*^9, 3.6756047001927*^9}, {3.6771507247945957`*^9, 
   3.677150734645582*^9}, 3.6867236851192093`*^9}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"sizes\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"tactics\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.5`", ",", "0.5`", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5`", ",", "0.5`", ",", 
        RowBox[{"-", "0.1`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0.9`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"util\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.3333333333333333`", ",", "0.3333333333333333`", ",", 
      "0.3333333333333333`"}], "}"}]}], ",", 
   RowBox[{"\<\"dx\"\>", "\[Rule]", "0"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.673644087048324*^9, 3.6747518617295647`*^9, 3.67560461363519*^9, 
   3.6756047037368402`*^9, 3.676893779674342*^9, 3.677150686506312*^9, 
   3.6771507352285337`*^9, 3.678110605484054*^9, 3.6781106791060534`*^9, 
   3.678110728120994*^9, {3.686723686167317*^9, 3.686723702073751*^9}, 
   3.687127538948227*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Random game states", "Subsubsection",
 CellChangeTimes->{
  3.6278919441400895`*^9, {3.644078853917965*^9, 3.644078856993073*^9}, 
   3.647885368355063*^9, {3.661112963024188*^9, 3.66111296328378*^9}, {
   3.661120967483095*^9, 3.6611209847008944`*^9}}],

Cell["\<\
Generate a random initial game state, specifying the number of nodes (n), the \
maximum node size, and the degree of nearness from the identity matrix:\
\>", "Text",
 CellChangeTimes->{{3.627716603982214*^9, 3.627716628790778*^9}, {
   3.6277166623812194`*^9, 3.6277166828098555`*^9}, {3.6278799225059032`*^9, 
   3.6278799504946127`*^9}, 3.6611208724517384`*^9, {3.6611209074029837`*^9, 
   3.6611209310254707`*^9}}],

Cell[BoxData[
 RowBox[{"randomGameState", ":=", " ", 
  RowBox[{"newState", "[", 
   RowBox[{
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "n"}], "]"}], ",", 
    RowBox[{"randomMatrixNear", "[", 
     RowBox[{"IdentityMatrix", "[", "n", "]"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6277166352520924`*^9, 3.6277166922911944`*^9}, {
   3.6277167786458664`*^9, 3.6277168194220963`*^9}, {3.627722955015895*^9, 
   3.6277229587714105`*^9}, {3.644077705561212*^9, 3.6440777105186653`*^9}, 
   3.656357208631587*^9, {3.656357267029236*^9, 3.65635727484309*^9}, {
   3.6611207563771963`*^9, 3.661120789060957*^9}, {3.661120831516164*^9, 
   3.6611208318182507`*^9}, {3.661351752856061*^9, 3.661351778725481*^9}, {
   3.661558947176117*^9, 3.661558954007531*^9}, {3.665093646514216*^9, 
   3.665093700023489*^9}, {3.665093814326667*^9, 3.665093816287241*^9}, {
   3.665093906858342*^9, 3.665093909231789*^9}, {3.673301303955235*^9, 
   3.67330130721707*^9}, 3.673302061842124*^9, {3.6734307196689873`*^9, 
   3.6734307225507927`*^9}, {3.6734308222640667`*^9, 3.673430839603198*^9}, {
   3.673430870698122*^9, 3.673430916322979*^9}, {3.673430954848942*^9, 
   3.6734310155960083`*^9}, {3.67345791516455*^9, 3.673457936819441*^9}, {
   3.674134788788311*^9, 3.6741347894200172`*^9}, {3.6747517897229652`*^9, 
   3.674751793695509*^9}, {3.6756041064365892`*^9, 3.675604168860093*^9}, {
   3.675604206174737*^9, 3.675604240488626*^9}, {3.675604353470484*^9, 
   3.6756044021455812`*^9}, 3.6756044415412407`*^9, {3.686723810138239*^9, 
   3.686723844283762*^9}, {3.686723912873129*^9, 3.686723922467502*^9}, 
   3.6871276895899067`*^9}],

Cell[CellGroupData[{

Cell[BoxData["randomGameState"], "Input"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"sizes\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.8680145967225381`", ",", "0.12208229353669298`", ",", 
      "0.7197927995658988`"}], "}"}]}], ",", 
   RowBox[{"\<\"tactics\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.669004373040831`", ",", 
        RowBox[{"-", "0.2117519981978839`"}], ",", 
        RowBox[{"-", "0.2514890837103439`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2570594053182801`", ",", "0.4797699422796959`", ",", 
        RowBox[{"-", "0.13755390840998058`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.07393622164088892`"}], ",", 
        RowBox[{"-", "0.30847805952242024`"}], ",", "0.6109570078796754`"}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"util\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.5456610291375218`", ",", "0.004047967956023297`", ",", 
      "0.34168358207174426`"}], "}"}]}], ",", 
   RowBox[{"\<\"dx\"\>", "\[Rule]", "0"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.686723853059675*^9, {3.686723917381734*^9, 3.68672392607484*^9}, 
   3.687127615286282*^9, 3.68712771845162*^9, 3.687171804886353*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Update game state", "Subsubsection",
 CellChangeTimes->{{3.661104335499229*^9, 3.66110435136351*^9}, {
  3.661110735951705*^9, 3.661110737667622*^9}, {3.6611222752227716`*^9, 
  3.661122292751459*^9}, {3.66117119902183*^9, 3.661171199597309*^9}}],

Cell["\<\
At every time step, we update the state of the nodes (which may grow or \
shrink) to get a new game state.  Procedure used: (1) multiply the tactics by \
the benevolence and malevolence constants, (2) use matrix multiplication to \
obtain the new node sizes.\
\>", "Text",
 CellChangeTimes->{{3.643737804231176*^9, 3.643737826463086*^9}, {
   3.644016643287328*^9, 3.6440166474683228`*^9}, {3.644069384332171*^9, 
   3.644069521010374*^9}, {3.644076170050601*^9, 3.644076182681649*^9}, {
   3.644076481946177*^9, 3.644076516323915*^9}, {3.644076597637151*^9, 
   3.6440766095993*^9}, {3.644076666562934*^9, 3.644076666808497*^9}, {
   3.647434577348002*^9, 3.6474345944412603`*^9}, {3.6564983777563677`*^9, 
   3.656498392157065*^9}, {3.661110349824912*^9, 3.661110362516733*^9}, {
   3.661110407442519*^9, 3.6611104118008537`*^9}, {3.66117121000025*^9, 
   3.661171231943228*^9}, 3.673300319548004*^9, {3.673300367134222*^9, 
   3.67330038706339*^9}, {3.673300632197789*^9, 3.673300634333798*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"updateState", "[", 
   RowBox[{"parentState_", ",", "newTactics_"}], "]"}], ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"skewedTactics", ",", "newNodes", ",", "newUtil", ",", "dx"}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Apply", " ", "the", " ", "benevolence"}], " ", "&"}], " ", 
      "malevolence", " ", "constants", " ", "to", " ", "the", " ", "tactic", 
      " ", "matrix"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"skewedTactics", " ", "=", " ", 
      RowBox[{"tacticSkew", "[", "newTactics", "]"}]}], ";", " ", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Use", " ", "the", " ", "dot", " ", "product", " ", "to", " ", "get", 
       " ", "the", " ", "new", " ", "node", " ", 
       RowBox[{"sizes", ".", " ", "Ensure"}], " ", "that", " ", "the", " ", 
       "result", " ", "does", " ", "not", " ", "produce", " ", "nodes", " ", 
       "with", " ", "negative", " ", 
       RowBox[{"sizes", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"newNodes", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"#", ",", "0"}], "]"}], "&"}], ",", " ", 
        RowBox[{"Dot", "[", 
         RowBox[{"skewedTactics", ",", 
          RowBox[{"parentState", "[", "\"\<sizes\>\"", "]"}]}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Calculate", " ", "the", " ", "\"\<tactical distance\>\"", " ", "from", 
       " ", "the", " ", "parent", " ", "tactic", " ", "matrix", " ", "to", 
       " ", "the", " ", "child", " ", 
       RowBox[{"matrix", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"dx", " ", "=", " ", 
      RowBox[{"tacticalDistance", "[", 
       RowBox[{
        RowBox[{"parentState", "[", "\"\<tactics\>\"", "]"}], ",", 
        "newTactics"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"newUtil", " ", "=", 
      RowBox[{"utility", "[", "newNodes", "]"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<sizes\>\"", " ", "->", "newNodes"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<tactics\>\"", " ", "\[Rule]", " ", "newTactics"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<util\>\"", "\[Rule]", "newUtil"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<dx\>\"", "\[Rule]", "dx"}]}], "\[IndentingNewLine]", 
       "|>"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.649198363277151*^9, 3.6491984162651463`*^9}, {
   3.649206481414444*^9, 3.649206495714161*^9}, 3.6492068506490192`*^9, {
   3.649271593382017*^9, 3.6492716127378693`*^9}, {3.656077133949854*^9, 
   3.6560771357543707`*^9}, {3.656077302901371*^9, 3.656077306666973*^9}, {
   3.656077438156075*^9, 3.656077441944166*^9}, {3.6560776095904627`*^9, 
   3.656077640490027*^9}, {3.656078129547412*^9, 3.656078131453774*^9}, {
   3.6560782058596973`*^9, 3.656078258508815*^9}, {3.656080653845047*^9, 
   3.656080658536487*^9}, 3.656080766658339*^9, {3.656177643095016*^9, 
   3.656177651691972*^9}, {3.65617773724955*^9, 3.656177753819661*^9}, {
   3.656177910803936*^9, 3.65617792516459*^9}, {3.656179502445065*^9, 
   3.6561795030249977`*^9}, {3.656287359949357*^9, 3.6562873857570467`*^9}, {
   3.656287424875969*^9, 3.656287441316004*^9}, {3.65628750369175*^9, 
   3.656287517092813*^9}, {3.656287673431219*^9, 3.656287679140408*^9}, {
   3.656498414930314*^9, 3.656498424953066*^9}, {3.6565873902255664`*^9, 
   3.656587394662205*^9}, 3.6565877194363766`*^9, {3.656606957973014*^9, 
   3.6566069913448544`*^9}, {3.656607309182287*^9, 3.656607312287788*^9}, {
   3.656608680170924*^9, 3.656608683362707*^9}, {3.656608749341218*^9, 
   3.656608775123317*^9}, {3.656608829060328*^9, 3.656608850585133*^9}, 
   3.65661520629086*^9, {3.6566154516108217`*^9, 3.6566154662614517`*^9}, {
   3.656615498391262*^9, 3.6566155003964977`*^9}, {3.661110145951926*^9, 
   3.6611101607543163`*^9}, {3.661121700395608*^9, 3.661121706620932*^9}, {
   3.661122190042446*^9, 3.661122198522696*^9}, {3.661170994000852*^9, 
   3.661171002920992*^9}, {3.661171050913595*^9, 3.661171055948532*^9}, {
   3.661171139895548*^9, 3.661171140322462*^9}, {3.661351165717534*^9, 
   3.661351236871127*^9}, {3.661351273670596*^9, 3.6613512784133873`*^9}, {
   3.6613514071179247`*^9, 3.661351494463436*^9}, {3.661555798057373*^9, 
   3.6615558261909*^9}, {3.661555856613575*^9, 3.661555871604834*^9}, {
   3.6615559026922913`*^9, 3.6615559194717417`*^9}, {3.661556007597518*^9, 
   3.661556045725984*^9}, {3.661556112376606*^9, 3.661556113075986*^9}, {
   3.6615561510548487`*^9, 3.6615561659522057`*^9}, {3.661556228147161*^9, 
   3.661556230800392*^9}, {3.66155626285905*^9, 3.661556271963739*^9}, {
   3.661556332259712*^9, 3.661556344656807*^9}, {3.661557552179593*^9, 
   3.661557570802569*^9}, {3.661559329984128*^9, 3.661559340531768*^9}, {
   3.6632650741742983`*^9, 3.663265084290515*^9}, {3.6632651147521133`*^9, 
   3.663265115110537*^9}, {3.673039729350103*^9, 3.673039734098569*^9}, {
   3.6733001951095343`*^9, 3.673300196522143*^9}, {3.6733004057178793`*^9, 
   3.673300434450405*^9}, {3.6733005166745872`*^9, 3.67330056567981*^9}, {
   3.673300618368849*^9, 3.6733006241991777`*^9}, {3.673301692832551*^9, 
   3.673301703362836*^9}, 3.673301978346355*^9, {3.6734313909371843`*^9, 
   3.673431394244669*^9}, {3.6734314867694674`*^9, 3.673431539485877*^9}, {
   3.673431591692094*^9, 3.673431606473196*^9}, {3.673431645541505*^9, 
   3.6734316633051367`*^9}, {3.6734316933499937`*^9, 3.673431741862466*^9}, 
   3.673431825670874*^9, {3.6734320372779303`*^9, 3.673432061901512*^9}, {
   3.673774287229416*^9, 3.673774312202571*^9}, {3.673774402555002*^9, 
   3.673774403127335*^9}, {3.6741238627866573`*^9, 3.6741238943454742`*^9}, {
   3.6741243708735857`*^9, 3.674124426709878*^9}, {3.674124630309826*^9, 
   3.674124658390678*^9}, {3.674124707491893*^9, 3.6741248166081*^9}, {
   3.674124894051136*^9, 3.67412493509982*^9}, {3.674125042203856*^9, 
   3.674125060197278*^9}, {3.674125123412019*^9, 3.67412513815838*^9}, {
   3.674125339541545*^9, 3.674125351200227*^9}, {3.6741255440684233`*^9, 
   3.674125558016932*^9}, {3.6741256021117907`*^9, 3.6741256314853163`*^9}, {
   3.674128783482708*^9, 3.674128788834435*^9}, {3.674128876514732*^9, 
   3.674128899937422*^9}, 3.674129177768401*^9, {3.674129777124147*^9, 
   3.674129786212558*^9}, {3.6741304060098343`*^9, 3.67413040712046*^9}, {
   3.674751410438253*^9, 3.6747514144920387`*^9}, {3.674751475144979*^9, 
   3.6747514769518137`*^9}, {3.674751510848196*^9, 3.674751551662765*^9}, {
   3.674751740946333*^9, 3.6747517515915337`*^9}, {3.674751975605337*^9, 
   3.674751986071556*^9}, {3.6747520240467777`*^9, 3.6747520457375097`*^9}, {
   3.6768865944439087`*^9, 3.676886636134362*^9}, {3.676886723306127*^9, 
   3.676886774942033*^9}, {3.676894406442295*^9, 3.67689443173628*^9}, {
   3.677149867715602*^9, 3.677149869840639*^9}, {3.677159679622752*^9, 
   3.6771596803282423`*^9}, {3.6781108505799427`*^9, 3.6781108580685797`*^9}, 
   3.686723989902549*^9, 3.6867271042169743`*^9, {3.686727146822722*^9, 
   3.686727147131205*^9}}],

Cell["Some tests of the function above:", "Text",
 CellChangeTimes->{{3.6440690505844107`*^9, 3.64406905638951*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"updateState", "[", 
  RowBox[{"randomGameState", ",", 
   RowBox[{"randomMatrixNear", "[", 
    RowBox[{"IdentityMatrix", "[", "n", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.673431943644836*^9, {3.6741302649556026`*^9, 3.67413026551298*^9}, {
   3.674130332600894*^9, 3.674130336845443*^9}, {3.674130420826797*^9, 
   3.674130421779551*^9}, 3.674130458778694*^9, 3.677159718108973*^9, {
   3.6867271223155823`*^9, 3.686727135851729*^9}, 3.687127702743812*^9}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"sizes\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.32142005913775296`", ",", "0.5088525748311411`", ",", 
      "0.5668171306750175`"}], "}"}]}], ",", 
   RowBox[{"\<\"tactics\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.9059833676583824`", ",", "0.11252175042088924`", ",", 
        RowBox[{"-", "0.03632748295286561`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.06726673415001874`"}], ",", "0.8056188694386629`", 
        ",", "0.203648991598584`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.026749898191599057`", ",", 
        RowBox[{"-", "0.08185938014044784`"}], ",", "0.7600235254485505`"}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"util\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.08568977816145361`", ",", "0.27022561748101276`", ",", 
      "0.3538783511234057`"}], "}"}]}], ",", 
   RowBox[{"\<\"dx\"\>", "\[Rule]", "0.37712796272459825`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.673431949185153*^9, 3.67343207242557*^9, 3.6734579786470337`*^9, 
   3.674130340472761*^9, {3.674130426290168*^9, 3.674130463577899*^9}, 
   3.675333691503564*^9, {3.675334057380639*^9, 3.67533406502878*^9}, 
   3.67715961467662*^9, {3.67715970249468*^9, 3.677159722840065*^9}, 
   3.6788755816871347`*^9, {3.686727136443406*^9, 3.686727150740775*^9}, 
   3.6871277045688066`*^9}]
}, Open  ]],

Cell["\<\
Before doing the matrix multiplication, we multiply the cells in the tactic \
matrix by either a malevolence factor (if the tactic is negative) or a \
benevolence factor (if it\[CloseCurlyQuote]s positive).  Any transfers of \
power from a node back to itself are not subject to this multiplication.\
\>", "Text",
 CellChangeTimes->{{3.644076683171879*^9, 3.6440767885841637`*^9}, {
   3.6440768294987297`*^9, 3.644076841096229*^9}, 3.661110334468732*^9, 
   3.673431970811736*^9, {3.6867270250950108`*^9, 3.686727033230547*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tacticSkew", "[", "tactics_", "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"newTactics", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Increase", " ", "all", " ", "transfers", " ", "to", " ", "other", " ", 
       "nodes", " ", "by", " ", "the", " ", "appropriate", " ", "factor"}], 
      " ", "*)"}], "\[IndentingNewLine]", " ", 
     RowBox[{
      RowBox[{"newTactics", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"applySkew", "[", 
           RowBox[{"#", ",", "\[Mu]", ",", "\[Beta]"}], "]"}], "&"}], ",", 
         "tactics", ",", " ", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Undo", " ", "the", " ", "increases", " ", "for", " ", "self"}], "-", 
        
        RowBox[{"transfers", " ", 
         RowBox[{"(", 
          RowBox[{"along", " ", "the", " ", "matrix", " ", "diagonal"}], 
          ")"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "n"}], ",", 
        RowBox[{"i", "++"}], ",", "  ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"newTactics", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "i"}], "]"}], "]"}], " ", "=", " ", 
          RowBox[{"tactics", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "i"}], "]"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", " ", "\n", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "newTactics", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.644072865784432*^9, 3.644072912115415*^9}, {
   3.6440729882571697`*^9, 3.6440730043313103`*^9}, {3.644073038837858*^9, 
   3.644073119010838*^9}, {3.649196933466833*^9, 3.649196962010832*^9}, {
   3.649197574803338*^9, 3.649197620186158*^9}, {3.649197855216196*^9, 
   3.649197862498294*^9}, 3.6491979805745897`*^9, 3.6491980369823837`*^9, {
   3.6491980778148193`*^9, 3.649198092440715*^9}, {3.649198143696506*^9, 
   3.649198144668427*^9}, 3.6491982119343443`*^9, {3.649206206820743*^9, 
   3.649206237130014*^9}, {3.6560780928472548`*^9, 3.656078102343512*^9}, {
   3.656500826308107*^9, 3.656500835108287*^9}, {3.6565008814386597`*^9, 
   3.6565009514288473`*^9}, {3.656501003965822*^9, 3.656501007271799*^9}, {
   3.6566155213247643`*^9, 3.656615521664226*^9}, {3.661121476904378*^9, 
   3.6611215006279173`*^9}, {3.661121569963076*^9, 3.661121606767462*^9}, {
   3.6733004421489964`*^9, 3.673300461288824*^9}, {3.674125120770534*^9, 
   3.6741251821939096`*^9}, 3.6741297618282757`*^9, {3.686725174670026*^9, 
   3.686725174946095*^9}, {3.686726939717786*^9, 3.686726940051022*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"applySkew", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"val", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"conflict", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"coop", ",", " ", "_Real"}], "}"}]}], "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"val", "<", "0"}], ",", " ", 
       RowBox[{"val", "*", "conflict"}], ",", " ", 
       RowBox[{"val", "*", "coop"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.649206144851355*^9, 3.649206148651795*^9}, {
   3.661121352574053*^9, 3.661121387218481*^9}, 3.674430201672263*^9, 
   3.6744681680692673`*^9, 3.686726631590466*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"tacticSkew", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.5", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.5", ",", 
       RowBox[{"-", "0.1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0.9"}], "}"}]}], "}"}], "]"}], " ", "//", 
  " ", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{3.686726955520034*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000065`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.5`", ",", "0.55`", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.55`", ",", "0.5`", ",", 
       RowBox[{"-", "0.30000000000000004`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "0.9`"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.68672695636309*^9, 3.68672697339926*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Play out a sequence of tactic matrices", "Subsubsection",
 CellChangeTimes->{{3.676885824284299*^9, 3.6768858305368013`*^9}, {
  3.6872119519264297`*^9, 3.6872119563849173`*^9}}],

Cell["\<\
Given a sequence of tactic matrices and an initial state, play out the \
sequence of moves and determine the results at each step.  This is a \
\[OpenCurlyDoubleQuote]line of play.\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.67688583478159*^9, 3.676885870256967*^9}, {
  3.677844087660995*^9, 3.677844108515728*^9}, {3.677844162380732*^9, 
  3.677844162917028*^9}, {3.6778442020295343`*^9, 3.677844202549564*^9}, {
  3.687209488439939*^9, 3.687209496999339*^9}, {3.687212069204561*^9, 
  3.687212080654071*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"playTacticMatrixSequence", "[", 
   RowBox[{"initialState_", ",", " ", "tacticMatrixSequence_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"FoldList", "[", 
   RowBox[{"updateState", ",", "initialState", ",", "tacticMatrixSequence"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6869861757154913`*^9, 3.686986239888172*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Utility / Payoff", "Subsection",
 CellChangeTimes->{{3.678093113817115*^9, 3.6780931156598063`*^9}, {
  3.678111087302438*^9, 3.6781110962948637`*^9}}],

Cell[CellGroupData[{

Cell["Utility function", "Subsubsection",
 CellChangeTimes->{{3.661104328187312*^9, 3.661104330167946*^9}}],

Cell["\<\
This function determines the \[OpenCurlyDoubleQuote]utility\
\[CloseCurlyDoubleQuote] of an agent\[CloseCurlyQuote]s game position.  See \
the paper for more information.\
\>", "Text",
 CellChangeTimes->{{3.661109957898925*^9, 3.6611099754210033`*^9}, {
  3.6739496364210987`*^9, 3.6739496388180447`*^9}, {3.674134621890402*^9, 
  3.674134628493718*^9}, {3.678110893196328*^9, 3.678110893960451*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"utility", "[", "s_List", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Total", "[", "s", "]"}], " ", "\[Equal]", " ", "0"}], ",", "s", 
    ",", 
    RowBox[{
     RowBox[{"s", "^", "\[Alpha]"}], " ", "/", " ", 
     RowBox[{"Total", "[", 
      RowBox[{"s", "^", "2"}], "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6565014736763487`*^9, {3.661109904992959*^9, 3.661109907608478*^9}, {
   3.6732996490297832`*^9, 3.673299652237762*^9}, {3.686727220777858*^9, 
   3.686727221505822*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"utility", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.673949614321548*^9, 3.673949615056573*^9}, 
   3.686727234092029*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.03333333333333333`", ",", "0.18856180831641267`", ",", 
   "0.5196152422706632`", ",", "1.0666666666666667`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.673949615576627*^9, {3.673949656815543*^9, 3.673949664789226*^9}, 
   3.686727237575807*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"utility", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6560824730962133`*^9, 3.6560824895264177`*^9}, {
  3.6611099167624702`*^9, 3.661109919205389*^9}, {3.68672724410718*^9, 
  3.686727244724752*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.656082489928357*^9, 3.6565014863709803`*^9, 
  3.661109930255966*^9, 3.686727245446225*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tactical distance", "Subsubsection",
 CellChangeTimes->{{3.673641531698254*^9, 3.673641533633692*^9}, {
  3.677149814108283*^9, 3.677149815405308*^9}}],

Cell["Determine the \[OpenCurlyDoubleQuote]distance\[CloseCurlyDoubleQuote] \
between two tactic vectors.", "Text",
 CellChangeTimes->{{3.674563766597828*^9, 3.674563777984461*^9}, {
  3.674580870299602*^9, 3.6745810113594093`*^9}, {3.674581073604405*^9, 
  3.674581086089375*^9}, {3.6771499115558243`*^9, 3.67714992542351*^9}, {
  3.6788755008517637`*^9, 3.678875501369712*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tacticalDistance", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Norm", "[", 
    RowBox[{
     RowBox[{"a", "-", "b"}], ",", "\"\<Frobenius\>\""}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.674563693209907*^9, 3.6745637077220383`*^9}, {
  3.674579840719513*^9, 3.67457989542097*^9}, {3.67458003762392*^9, 
  3.67458004347834*^9}, {3.674580126498373*^9, 3.674580130118824*^9}, {
  3.675877093437057*^9, 3.675877096380835*^9}, {3.677149076003551*^9, 
  3.677149083049232*^9}, {3.677149844330467*^9, 3.677149845409008*^9}, {
  3.6788754840235987`*^9, 3.6788754881522493`*^9}, {3.686728015923517*^9, 
  3.686728048162903*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.964", ",", "0.038", ",", "0.022"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.008", ",", "0.896", ",", "0.012"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.028", ",", 
       RowBox[{"-", "0.067"}], ",", "0.966"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.846", ",", "0.164", ",", "0.036"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.103"}], ",", "0.719", ",", "0.123"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.051", ",", 
       RowBox[{"-", "0.117"}], ",", "0.841"}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.674563794591505*^9, 3.674563802380206*^9}, 
   3.674563834658812*^9, {3.674563880730153*^9, 3.6745638868798122`*^9}, {
   3.686728237714182*^9, 3.6867282379505777`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tacticalDistance", "[", 
  RowBox[{"a", ",", "b"}], "]"}]], "Input",
 CellChangeTimes->{{3.674579901178441*^9, 3.674579906355955*^9}, 
   3.6771498514272633`*^9, {3.686728073186803*^9, 3.686728075339716*^9}, 
   3.686728216584495*^9}],

Cell[BoxData["0.3234516965483409`"], "Output",
 CellChangeTimes->{
  3.674579906941025*^9, 3.6745800466520863`*^9, 3.674580133014534*^9, 
   3.674752222828043*^9, 3.675878236050836*^9, {3.677149065875757*^9, 
   3.677149087057437*^9}, {3.678875468331572*^9, 3.678875491590165*^9}, 
   3.683484352064687*^9, {3.68672806261126*^9, 3.686728111237007*^9}, 
   3.686728248974308*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "a", "]"}], ";", " ", 
  RowBox[{"Clear", "[", "b", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.674752233112143*^9, 3.67475223966164*^9}}],

Cell["\<\
Total tactical distance of a line of play.  The input is a list of game \
states.\
\>", "Text",
 CellChangeTimes->{{3.6871280733449697`*^9, 3.687128085776063*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"lineDistance", "[", "line_", "]"}], ":=", " ", 
   RowBox[{"Total", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"#dx", "&"}], ",", "line"}], "]"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.687127238390903*^9, 3.687127259174403*^9}, {
   3.687127986631021*^9, 3.6871280328921556`*^9}, 3.687128244367425*^9, 
   3.6871283467452593`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Payoff", "Subsubsection",
 CellChangeTimes->{{3.678014129401977*^9, 3.6780141331752443`*^9}}],

Cell["\<\
The payoff is the utility of a position multiplied by the likelihood of \
reaching it.\
\>", "Text",
 CellChangeTimes->{{3.6780928837573833`*^9, 3.678092916869595*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"payoff", "[", 
    RowBox[{"utility_", ",", " ", "dx_"}], "]"}], " ", ":=", 
   RowBox[{"utility", "*", " ", 
    RowBox[{"N", "[", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "\[Sigma]"}], "]"}], ",", "dx"}], "]"}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.678014138299735*^9, 3.678014141034724*^9}, {
  3.678092820399819*^9, 3.678092837937274*^9}, {3.686728423172573*^9, 
  3.686728451515025*^9}, {3.686728623622622*^9, 3.686728626067882*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}], "//", " ", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{
  3.676360483512385*^9, {3.678573291170602*^9, 3.67857332903067*^9}, {
   3.678701088539378*^9, 3.6787010899311247`*^9}, {3.67870248797231*^9, 
   3.678702519272976*^9}}],

Cell[BoxData[
 FormBox[
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Sigma]", "2"]}]]}]], 
   RowBox[{
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.67636048457014*^9, {3.6785732859838*^9, 3.678573329813243*^9}, 
   3.678701090482277*^9, {3.678702489460442*^9, 3.678702519940034*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}], " ", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", "1"}], "}"}], ",", "0.00001", ",", "5"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676309327292419*^9, 3.676309476983759*^9}, {
   3.676309512796919*^9, 3.676309517422903*^9}, 3.676309557159425*^9, {
   3.676358750161302*^9, 3.676358752358761*^9}, {3.676360289273156*^9, 
   3.6763603164917583`*^9}, {3.677149361669587*^9, 3.677149375805582*^9}, 
   3.677149680995528*^9, {3.677765212776836*^9, 3.6777652147720013`*^9}, {
   3.6777689206813717`*^9, 3.677768920757707*^9}, {3.678110956237788*^9, 
   3.678110979329793*^9}, 3.686728555249793*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Sigma]$$ = 0.79, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Sigma]$$], 1}, 0.00001, 5}}, Typeset`size$$ = {
    360., {114., 119.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Sigma]$12386$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Sigma]$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Sigma]$$, $CellContext`\[Sigma]$12386$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        PDF[
         NormalDistribution[
         0, $CellContext`\[Sigma]$$], $CellContext`x], {$CellContext`x, 0, 
         10}, PlotRange -> {{0, 5}, {0, 2}}], 
      "Specifications" :> {{{$CellContext`\[Sigma]$$, 1}, 0.00001, 5}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {159., 165.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.678110963870439*^9, 3.678110981085878*^9}, 
   3.6787023523031597`*^9, 3.686728516774856*^9, 3.686728556534705*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Intertemporal utility", "Subsubsection",
 CellChangeTimes->{{3.67714926914018*^9, 3.6771492733376617`*^9}, 
   3.687209970623837*^9}],

Cell["\<\
Given a list of payoffs for a particular player, calculate the intertemporal \
utility.  It is assumed that the payoff of the initial state will be omitted \
from this list.\
\>", "Text",
 CellChangeTimes->{{3.6871692597841377`*^9, 3.687169314966729*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"intertemporalUtility", "[", "payoffs_List", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Delta]"}], ")"}], "*", " ", 
   RowBox[{"payoffs", ".", "discountVector", " "}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6650952444327717`*^9, 3.6650952733880367`*^9}, {
   3.665095304860448*^9, 3.665095418479726*^9}, {3.6650954539285603`*^9, 
   3.665095548164453*^9}, {3.665131264875572*^9, 3.665131325319326*^9}, {
   3.665131776392988*^9, 3.665131867554212*^9}, {3.6651319215954523`*^9, 
   3.665132014285803*^9}, {3.665132071533676*^9, 3.66513211072237*^9}, {
   3.6651321749250317`*^9, 3.665132298327677*^9}, {3.66513234794249*^9, 
   3.665132376108265*^9}, {3.665132602987109*^9, 3.6651326088313837`*^9}, {
   3.665132653127248*^9, 3.665132675553179*^9}, {3.673470340764442*^9, 
   3.67347035162889*^9}, {3.673470471808339*^9, 3.673470479097601*^9}, {
   3.67347118382635*^9, 3.6734712539283657`*^9}, {3.673471297116909*^9, 
   3.673471307698807*^9}, {3.673471462019836*^9, 3.6734714826375217`*^9}, {
   3.6734715273383512`*^9, 3.6734715346403*^9}, {3.673471923644271*^9, 
   3.673471977751588*^9}, {3.673472048932816*^9, 3.673472052671357*^9}, {
   3.6734721276951723`*^9, 3.673472166318199*^9}, {3.6734723989890137`*^9, 
   3.673472441187291*^9}, {3.673472477502722*^9, 3.6734724815611877`*^9}, {
   3.673472514522664*^9, 3.6734727268940783`*^9}, {3.673473382792399*^9, 
   3.673473442374571*^9}, {3.673537268364197*^9, 3.673537268782824*^9}, {
   3.673538245494625*^9, 3.673538267758506*^9}, {3.673796676521531*^9, 
   3.6737966768361177`*^9}, {3.6737968849508047`*^9, 3.673796885092301*^9}, {
   3.6737974890639677`*^9, 3.673797495115417*^9}, 3.674123958655539*^9, {
   3.674123998002304*^9, 3.674124025018368*^9}, {3.674124319964901*^9, 
   3.674124354739005*^9}, {3.674129036384079*^9, 3.674129221087388*^9}, 
   3.674129387271572*^9, {3.6741295195261497`*^9, 3.674129601479207*^9}, {
   3.674129640392849*^9, 3.674129680154541*^9}, {3.6752497186265097`*^9, 
   3.675249723718567*^9}, {3.675249872729947*^9, 3.675249877969623*^9}, {
   3.6752499186340647`*^9, 3.675249956628233*^9}, {3.675250164374288*^9, 
   3.675250170488957*^9}, 3.675250676511581*^9, {3.6752507553864193`*^9, 
   3.675250774615898*^9}, {3.675253123662545*^9, 3.6752531752983418`*^9}, {
   3.6752572917845917`*^9, 3.6752573428783283`*^9}, {3.6752573855653276`*^9, 
   3.6752573951583643`*^9}, {3.6752574277779007`*^9, 
   3.6752575192608423`*^9}, {3.675257565715424*^9, 3.675257566017026*^9}, {
   3.67533206624024*^9, 3.675332161467265*^9}, 3.675332195789082*^9, {
   3.675332235205406*^9, 3.675332279688302*^9}, {3.675332339275331*^9, 
   3.675332344957945*^9}, {3.675333812871627*^9, 3.675333813027761*^9}, 
   3.6753338596149483`*^9, {3.675333944068007*^9, 3.675334018566566*^9}, {
   3.6771505152240467`*^9, 3.6771505212383413`*^9}, {3.677151419044886*^9, 
   3.6771514475071173`*^9}, {3.6771514961866198`*^9, 3.677151499209344*^9}, 
   3.677151535008127*^9, {3.677151574821136*^9, 3.677151578131733*^9}, {
   3.6771516148368797`*^9, 3.677151679945532*^9}, {3.677151886955036*^9, 
   3.677151906886199*^9}, {3.677151970642207*^9, 3.6771519711274843`*^9}, {
   3.6771520410401506`*^9, 3.677152090959413*^9}, {3.67715213610429*^9, 
   3.6771521421857357`*^9}, {3.678092966155773*^9, 3.678093003034752*^9}, {
   3.678097756787526*^9, 3.678097766760921*^9}, 3.67811100528405*^9, 
   3.678111038941269*^9, {3.6867286933144693`*^9, 3.686728718950205*^9}, {
   3.6867288636687603`*^9, 3.686728864160817*^9}, 3.687128495263192*^9, {
   3.687169047176724*^9, 3.687169047913679*^9}, {3.687169116399392*^9, 
   3.6871691195730467`*^9}, {3.687169334312599*^9, 3.68716937073418*^9}, {
   3.68716942965695*^9, 3.687169465850485*^9}, {3.687169515182395*^9, 
   3.687169600812031*^9}, 3.687169719057007*^9, {3.687169752928248*^9, 
   3.6871697553533897`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"intertemporalUtility", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6871694752308273`*^9, 3.687169488151209*^9}, {
  3.6871695205043*^9, 3.687169520608617*^9}, {3.6871697326416063`*^9, 
  3.687169749134729*^9}, {3.687170356136241*^9, 3.687170424001172*^9}}],

Cell[BoxData["0.1024`"], "Output",
 CellChangeTimes->{{3.687169471745985*^9, 3.687169488582696*^9}, 
   3.687169521005746*^9, {3.68716974980949*^9, 3.687169768558104*^9}, {
   3.687170357538949*^9, 3.687170424505274*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"intertemporalUtilityVector", "[", "gamePath_", "]"}], ":=", " ", 
   RowBox[{"intertemporalUtility", " ", "/@", " ", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"payoff", "[", 
         RowBox[{"#util", ",", "#dx"}], "]"}], "&"}], ",", 
       RowBox[{"Rest", "[", "gamePath", "]"}]}], "]"}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.687169802861462*^9, 3.6871698435721073`*^9}, {
  3.687169876507497*^9, 3.687169948836899*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"intertemporalUtilityVector", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.6871698591560593`*^9, 3.687169864412517*^9}, {
  3.687169961962843*^9, 3.687169962460004*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0011359558770374254`", ",", "0.13518159216816766`", ",", "0.`"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.6871698617508183`*^9, 3.687169864836392*^9}, {
  3.687169913905726*^9, 3.6871699215894814`*^9}, {3.6871699516393433`*^9, 
  3.68716997596837*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Individual rationality", "Subsubsection",
 CellChangeTimes->{{3.673538848590138*^9, 3.673538869238508*^9}, {
  3.673539130566387*^9, 3.673539132450547*^9}, {3.6744686826328015`*^9, 
  3.6744686863217306`*^9}}],

Cell[TextData[{
 "This function helps determine whether an intertemporal utility vector \
(representing the IU of all players) is preferable to another path in which \
all game states (except the first) are Nash equilibria.  Determines whether \
every element in ",
 StyleBox["list1", "Input"],
 " is greater than the corresponding element in ",
 StyleBox["list2", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.665096514421885*^9, 3.665096623929181*^9}, {
   3.673539046919585*^9, 3.6735391079163733`*^9}, {3.6744687086225214`*^9, 
   3.674468735987549*^9}, 3.675249395501295*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"listDominatesQ", "[", 
   RowBox[{"list1_", ",", " ", "list2_"}], "]"}], " ", ":=", 
  RowBox[{"ContainsOnly", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", ">", " ", "0"}], "&"}], ",", 
      RowBox[{"list1", "-", "list2"}]}], "]"}], ",", 
    RowBox[{"{", "True", "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.673539228244417*^9, 3.673539253951687*^9}, {
   3.6735395617535973`*^9, 3.673539563319633*^9}, {3.673539629621251*^9, 
   3.673539633142964*^9}, {3.673546109544722*^9, 3.673546120039761*^9}, 
   3.6752494195934896`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"listDominatesQ", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.2", ",", "9", ",", "3.01"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{
  3.6735396218676863`*^9, {3.673539653601102*^9, 3.673539653872216*^9}, {
   3.673543586945756*^9, 3.6735435979041348`*^9}, {3.673546125911792*^9, 
   3.673546147756736*^9}, {3.6747500548232727`*^9, 3.674750057430612*^9}, {
   3.6752494258429947`*^9, 3.675249430528552*^9}, 3.675605993783415*^9, {
   3.678097935883819*^9, 3.678097936216941*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.673539636925767*^9, 3.673539682451079*^9}, {
  3.673543579664918*^9, 3.673543598643417*^9}, {3.6735461235508223`*^9, 
  3.673546148236617*^9}, {3.674750058540794*^9, 3.67475007306166*^9}, {
  3.674750147916535*^9, 3.674750196563294*^9}, {3.675249423322649*^9, 
  3.67524943158917*^9}, {3.675605991455789*^9, 3.6756059949988832`*^9}, {
  3.678097931891447*^9, 3.678097937425489*^9}}]
}, Open  ]],

Cell["\<\
A player\[CloseCurlyQuote]s minimax value is the smallest value that the \
other players can force the player to receive.  Of all Nash equilibria at \
t=1, a player\[CloseCurlyQuote]s minimax value is the minimum of all of her \
Nash payoffs.\
\>", "Text",
 CellChangeTimes->{{3.6868625040594997`*^9, 3.686862569339613*^9}, {
  3.686862631124947*^9, 3.686862647539352*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"playerMinimum", "[", "payoffList_", "]"}], ":=", " ", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Min", "[", "#", "]"}], "&"}], ",", 
    RowBox[{"Transpose", "[", "payoffList", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6868624987979918`*^9, 3.686862499128675*^9}, {
  3.68686265808885*^9, 3.686862663539722*^9}, {3.686862785377256*^9, 
  3.686862803219502*^9}, {3.68686283461514*^9, 3.686862850083947*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"playerMinimum", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "3", ",", "5"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.686862807416678*^9, 3.686862827608075*^9}, {
  3.68686285786344*^9, 3.686862858094954*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "1", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{{3.686862828219891*^9, 3.686862858491976*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nash Equilibria", "Subsection",
 CellChangeTimes->{{3.677625814939682*^9, 3.67762581848111*^9}}],

Cell[CellGroupData[{

Cell["Explanation", "Subsubsection",
 CellChangeTimes->{{3.6776258207142773`*^9, 3.677625823188107*^9}}],

Cell[TextData[{
 "This section explains the implementation of the algorithm that identifies \
Nash equilibria among the players\[CloseCurlyQuote] tactics.  This algorithm \
is complex but decently fast: the data structure used avoids having to make \
an exponential number of lookups and comparisons, and the functional style \
makes the algorithm parallelizable.  Here\[CloseCurlyQuote]s how it works.\n\n\
We want to know every combination of all players\[CloseCurlyQuote] tactics, \
so we can play out all possible games.  For example, if player one has \
tactics numbered ",
 StyleBox["{1,2}", "Input"],
 " and player two has tactics ",
 StyleBox["{1,2}", "Input"],
 ", we want to see the outcomes of all games - that is, those with the \
tactics combinations ",
 StyleBox["{{1,1},{1,2},{2,1},{2,2}}", "Input"],
 ".  These combinations are  generated using ",
 StyleBox["Tuples", "Input"],
 StyleBox[" in the ", " text"],
 StyleBox["matrixPermutations", "Input"],
 StyleBox[" function above", " text"],
 ".  (Note that even though both players have tactics with the number 1, that \
doesn\[CloseCurlyQuote]t mean that they\[CloseCurlyQuote]re the same \
tactic.)"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQbaHyIb4l7bWjOdf6DBB9ov50MYj2+m9TD6IP/JFv
AdFXwpwmgmihaeyrJwDpJ/3PDoPogAmrj4PoI4abL4LoBdpZN8D8hTrvQPS1
2rPME4H0jrP+EiC6Jm9rIoj+HjUpCUQvXqusOQlIc4UHgmkDQRZ9EP3OayWY
dmhrnAWi+c4tBdNxR98uBtFrwiKXgOiF673nPCh/7dhSmAymZXL3iZyuALqP
4R+YltRdvxpEd9YuWQuiZy1u/gSi37T4fgbRXRNefAfRcjEsP0B0kVOOwRkg
rcCwyBpE+wQyuoHod45KYBoAhBCguQ==
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Tuples", "[", 
   RowBox[{
    RowBox[{"Range", "[", "2", "]"}], ",", "3"}], "]"}], " ", "//", " ", 
  "Column"}]], "Input",
 CellChangeTimes->{{3.67765294282584*^9, 3.677652946190071*^9}, 
   3.6872109707644587`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "2"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "2"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "2"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "2"}], "}"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.677652946668161*^9, 3.677653103149848*^9, 
  3.677653201000799*^9, 3.6872109748565807`*^9}]
}, Open  ]],

Cell["\<\
Each row in the above table represents a possible game state and it shows \
which tactics each player chose that resulted in that state.  In the first \
row, each player plays tactic #1, and so on.  Through some procedures and \
manipulations described in the other sections of this document, we can end up \
with a data structure that has the same shape as the above table, but that \
contains the intertemporal utility (IU) payoff values of each game.  Here\
\[CloseCurlyQuote]s an example (populated with random numbers):\
\>", "Text",
 CellChangeTimes->{{3.677653269679929*^9, 3.67765354090412*^9}, {
  3.677653601659583*^9, 3.677653618559778*^9}, {3.677653690159131*^9, 
  3.6776536912992907`*^9}, {3.677655513543215*^9, 3.677655550723847*^9}, {
  3.677656419162181*^9, 3.677656440009445*^9}, {3.687211004161798*^9, 
  3.687211039819949*^9}, {3.687211581887095*^9, 3.687211597773868*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Round", "[", 
   RowBox[{
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8", ",", "3"}], "}"}]}], "]"}], ",", "0.01"}], "]"}], " ", "//",
   " ", "Column"}]], "Input",
 CellChangeTimes->{{3.6776535505455427`*^9, 3.677653652495376*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"0.41000000000000003`", ",", "0.32`", ",", "0.04`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0.28`", ",", "0.86`", ",", "0.01`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0.28`", ",", "0.63`", ",", "0.44`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0.68`", ",", "0.14`", ",", "0.55`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0.59`", ",", "0.15`", ",", "0.78`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0.51`", ",", "0.46`", ",", "0.9500000000000001`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0.18`", ",", "0.42`", ",", "0.23`"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0.22`", ",", "0.1`", ",", "0.03`"}], "}"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.677653653010508*^9}]
}, Open  ]],

Cell[TextData[{
 "Each row in this IU table corresponds to the same row in the tactic \
combination table.  (This is due to the consistent way that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " executes ",
 StyleBox["Tuples", "Input"],
 ".)\n\nA Nash equilibrium is a game outcome in which no player could do \
better by changing their tactic.  In other words, it\[CloseCurlyQuote]s an \
outcome in which every player plays the best response to every other player\
\[CloseCurlyQuote]s possible tactics.  In this game, there are typically \
multiple equilibria, but sometimes one and, rarely, none.\n\nIn a two player \
game, outcomes can be organized in a 2 x ",
 StyleBox["breadth", "Input"],
 " payoff matrix.  A three player game would have a payoff cube and an \
n-player game would have a payoff hypercube.  The IU table above is a \
serialized representation of every cell in a payoff matrix/cube/hypercube: it\
\[CloseCurlyQuote]s a list rather than an n-dimensional data structure.  \
There are ",
 StyleBox["breadth^n", "Input"],
 " rows in this table.\n\nWe can exploit the numeric pattern in the",
 StyleBox[" tactic combination t", " text"],
 "able to quickly identify a player\[CloseCurlyQuote]s best move for a given \
situation.  For example, look at the first two rows of that table:\n\n",
 Cell[BoxData[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", 
       StyleBox["1",
        FontWeight->"Bold"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", 
       StyleBox["2",
        FontWeight->"Bold"]}], "}"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]],
  CellChangeTimes->{3.677652946668161*^9, 3.677653103149848*^9, 
   3.677653201000799*^9}]
}], "Text",
 CellChangeTimes->{{3.6776536718791323`*^9, 3.67765372904952*^9}, {
  3.677653937007691*^9, 3.6776540143754263`*^9}, {3.677654071978301*^9, 
  3.677654210127256*^9}, {3.6776543390351143`*^9, 3.677654461391852*^9}, {
  3.677654534684659*^9, 3.677654630391056*^9}, {3.6776546739332247`*^9, 
  3.677654805449499*^9}, {3.677655585340563*^9, 3.6776555856102324`*^9}, {
  3.677655645490699*^9, 3.677655672406402*^9}, {3.677656470009487*^9, 
  3.6776564977326107`*^9}, {3.687211232494938*^9, 3.687211251968524*^9}, {
  3.687211318704515*^9, 3.687211334519672*^9}, {3.6872116091478443`*^9, 
  3.6872116331587152`*^9}}],

Cell[TextData[{
 "This snippet shows all the game states where players one and two play \
tactic #1, along with player three\[CloseCurlyQuote]s two responses.  We can \
find player three\[CloseCurlyQuote]s best response by identifying the rows \
with the maximum IU values in the corresponding cells in the IU table.  If we \
then \[OpenCurlyDoubleQuote]slide down\[CloseCurlyDoubleQuote] column three \
of the IU table, making similar comparisons as we go, we can identify all of \
player three\[CloseCurlyQuote]s best responses for the various other \
situations that she might encounter.  We can do the same for players one and \
two, but with different patterns of sliding down: the spacing and grouping of \
\[OpenCurlyDoubleQuote]comparable\[CloseCurlyDoubleQuote] cells will be \
different in each column.  \n\n",
 Cell[BoxData[
  TagBox[GridBox[{
     {
      RowBox[{"{", 
       RowBox[{
        StyleBox["1",
         FontWeight->"Bold"], ",", "1", ",", "1"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "2"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "1"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "2"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{
        StyleBox["2",
         FontWeight->"Bold"], ",", "1", ",", "1"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"2", ",", "1", ",", "2"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"2", ",", "2", ",", "1"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"2", ",", "2", ",", "2"}], "}"}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"]]],
 "        ",
 Cell[BoxData[
  TagBox[GridBox[{
     {
      RowBox[{"{", 
       RowBox[{"1", ",", 
        StyleBox["1",
         FontWeight->"Bold"], ",", "1"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "2"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", 
        StyleBox["2",
         FontWeight->"Bold"], ",", "1"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "2"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"2", ",", "1", ",", "1"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"2", ",", "1", ",", "2"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"2", ",", "2", ",", "1"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"2", ",", "2", ",", "2"}], "}"}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"]]],
 "        ",
 Cell[BoxData[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", 
       StyleBox["1",
        FontWeight->"Bold"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", 
       StyleBox["2",
        FontWeight->"Bold"]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "2"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "2"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "1"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "2"}], "}"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]]],
 "\n\nThe algorithm below implements this idea in ",
 StyleBox["bestResponsesForPlayer", "Input"],
 ", altering the way is slides and groups comparable cells, based on ",
 StyleBox["n", "Input"],
 ", ",
 StyleBox["breadth", "Input"],
 ", and the player number.  The ",
 StyleBox["nashEquilibria", "Input"],
 " function collates the best responses for each column (player) and then \
uses ",
 StyleBox["Intersection", "Input"],
 " to find the rows (strategy combos) in which every player has a best \
response."
}], "Text",
 CellChangeTimes->{{3.6776548231337023`*^9, 3.677655194018386*^9}, {
  3.677655708719928*^9, 3.6776558053472443`*^9}, {3.6776565870301247`*^9, 
  3.677656604517473*^9}, {3.677656641628932*^9, 3.677656642909535*^9}, {
  3.677693960707786*^9, 3.677694003187522*^9}, {3.677694132321801*^9, 
  3.6776941333907137`*^9}, {3.687211339563004*^9, 3.68721135092258*^9}, {
  3.6872116397793503`*^9, 3.687211640202877*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Implementation", "Subsubsection",
 CellChangeTimes->{{3.6776252700866423`*^9, 3.67762527435361*^9}, {
  3.677625844764203*^9, 3.677625846572227*^9}}],

Cell["\<\
Identify strategy combinations that are Nash equilibria.  First find each \
player\[CloseCurlyQuote]s best responses to the other players\
\[CloseCurlyQuote] possible moves; then return the IDs of all rows that are \
Nash equilibria.  Input is a matrix (list of payoff vectors); output is a \
list of row IDs indicating which payoff vectors are Nash equilibria.\
\>", "Text",
 CellChangeTimes->{{3.677625858378593*^9, 3.677625881158939*^9}, 
   3.686728957383349*^9, {3.686981556716827*^9, 3.6869816349050903`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nashEquilibria", "[", "utilTable_", "]"}], " ", ":=", " ", 
  RowBox[{"Apply", "[", 
   RowBox[{"Intersection", ",", 
    RowBox[{"ParallelArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"bestResponsesForPlayer", "[", 
        RowBox[{
         RowBox[{"utilTable", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "#"}], "]"}], "]"}], ",", "#"}], "]"}], " ", 
       "&"}], ",", "n"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6776252865657797`*^9, 3.677625479065827*^9}, {
   3.677625557985828*^9, 3.677625565595015*^9}, {3.677625626207288*^9, 
   3.6776256300501013`*^9}, {3.677626653289959*^9, 3.6776266756742887`*^9}, {
   3.677626947393386*^9, 3.6776269550569*^9}, {3.6776552361618843`*^9, 
   3.677655304052538*^9}, {3.6777542231702013`*^9, 3.6777542629108963`*^9}, {
   3.677756292364523*^9, 3.677756299799885*^9}, {3.677756341429562*^9, 
   3.677756417744876*^9}, {3.677756450462615*^9, 3.677756458623131*^9}, 
   3.67775658634923*^9, {3.677758457815961*^9, 3.677758458777931*^9}, {
   3.677758495586293*^9, 3.6777585020480747`*^9}, {3.6867290888499413`*^9, 
   3.6867291023145227`*^9}, 3.686729144595066*^9, {3.686981510940895*^9, 
   3.686981525253564*^9}, {3.686981652647709*^9, 3.686981660147656*^9}}],

Cell["\<\
This is the most complicated function in the implementation.  See the \
explanation above for context.  This function identifies the best responses \
for each player, given the various strategies of other players:\
\>", "Text",
 CellChangeTimes->{{3.677625887927577*^9, 3.6776259249952173`*^9}, {
  3.6777559605952168`*^9, 3.6777559993571672`*^9}, {3.6777566680145607`*^9, 
  3.6777566685211363`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"bestResponsesForPlayer", "[", 
   RowBox[{"utils_List", ",", "player_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "col", ",", "indexedUtils", ",", "segments", ",", "comparables", ",", 
      "subsegments"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Reverse", " ", "the", " ", "index", " ", "number", " ", "of", " ", 
      "the", " ", "column"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"e", ".", "g", ".", " ", "instead"}], " ", "of", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], " ", "use", " ", 
      "column", " ", "numbers", " ", 
      RowBox[{"{", 
       RowBox[{"4", ",", "3", ",", "2", ",", "1"}], "}"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"col", "=", 
      RowBox[{"n", "-", "player", " ", "+", " ", "1"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "Match", " ", "each", " ", "utility", " ", "value", " ", "with", " ", 
        "an", " ", "index", " ", "number"}], ",", " ", 
       RowBox[{
       "to", " ", "keep", " ", "track", " ", "of", " ", "the", " ", 
        "corresponding", " ", "row"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"e", ".", "g", ".", " ", "convert"}], " ", "utility", " ", 
       "values", " ", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], " ", "into", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "a"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "b"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "c"}], "}"}]}], "}"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"indexedUtils", " ", "=", 
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Riffle", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "utils", "]"}], "]"}], ",", "utils"}], 
         "]"}], ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Break", " ", "the", " ", "column", " ", "up", " ", "into", " ", 
       "segments", " ", "based", " ", "on", " ", "the", " ", "breadth", " ", 
       "and", " ", 
       RowBox[{"(", "reversed", ")"}], " ", "column", " ", "index"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"segments", " ", "=", " ", 
      RowBox[{"Partition", "[", 
       RowBox[{"indexedUtils", ",", 
        RowBox[{"breadth", "^", "col"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"The", " ", "rightmost", " ", "column", " ", 
        RowBox[{"doesn", "'"}], "t", " ", "need", " ", "to", " ", "be", " ", 
        "subsegmented"}], ",", " ", 
       RowBox[{
        RowBox[{
        "since", " ", "comparable", " ", "cells", " ", "are", " ", "always", 
         " ", 
         RowBox[{"adjacent", ".", "  ", "Otherwise"}]}], "..."}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"col", "\[Equal]", "1"}], ",", 
       RowBox[{"comparables", "=", "segments"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Break", " ", "each", " ", "segment", " ", "down", " ", "further", 
         " ", "to", " ", "\"\<line up\>\"", " ", "comparable", " ", "cells"}],
         " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"subsegments", " ", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Partition", "[", 
             RowBox[{"#", ",", 
              RowBox[{"breadth", "^", 
               RowBox[{"(", 
                RowBox[{"col", "-", "1"}], ")"}]}]}], "]"}], "&"}], ",", 
           "segments"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Group", " ", "utility", " ", "values", " ", "that", " ", "should", 
          " ", "be", " ", "compared", " ", "with", " ", "each", " ", 
          "other"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Flatten", " ", "to", " ", "remove", " ", "redundant", " ", 
          RowBox[{
           RowBox[{"{", "}"}], "'"}], "s", " ", "that", " ", "have", " ", 
          "built", " ", "up"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"comparables", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{"Transpose", ",", "subsegments"}], "]"}], ",", "1"}], 
          "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "Find", " ", "the", " ", "best", " ", "responses", " ", "within", " ", 
        "each", " ", "group", " ", "of", " ", "comparables"}], ",", " ", 
       RowBox[{
       "then", " ", "Flatten", " ", "the", " ", "results", " ", "into", " ", 
        "a", " ", "single", " ", "list"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"maxIDs", ",", "comparables"}], "]"}], "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.677451880255522*^9, 3.677451960384502*^9}, {
   3.67745201294698*^9, 3.677452045468008*^9}, 3.6774520857732983`*^9, {
   3.677452136398576*^9, 3.677452185404421*^9}, {3.677452313293582*^9, 
   3.677452341004558*^9}, {3.677452427321968*^9, 3.677452453424192*^9}, {
   3.677452976778723*^9, 3.677453021247497*^9}, {3.677453051422934*^9, 
   3.6774530916302853`*^9}, {3.6774531576318817`*^9, 3.677453213211336*^9}, {
   3.6774533315787354`*^9, 3.677453386362669*^9}, {3.677453517559702*^9, 
   3.6774535214222593`*^9}, {3.677453595588718*^9, 3.677453595800851*^9}, {
   3.677453697033744*^9, 3.677453704003529*^9}, {3.6774537666904497`*^9, 
   3.677453770295402*^9}, {3.6774538699381*^9, 3.677453872527512*^9}, {
   3.677453935754179*^9, 3.677454020908428*^9}, {3.677454170727625*^9, 
   3.677454170845948*^9}, {3.6775315849176903`*^9, 3.677531588205777*^9}, {
   3.6775328765096617`*^9, 3.677532905056316*^9}, 3.677533057772728*^9, {
   3.677533135674528*^9, 3.67753314570577*^9}, 3.6775331855875177`*^9, {
   3.6776183849864597`*^9, 3.6776183951257277`*^9}, {3.677618594255673*^9, 
   3.677618659410329*^9}, {3.677618747317301*^9, 3.677618782891448*^9}, {
   3.6776188405023193`*^9, 3.677618843241233*^9}, {3.6776189087252693`*^9, 
   3.677618919075721*^9}, {3.677619231169158*^9, 3.677619240364438*^9}, {
   3.677619315727257*^9, 3.6776193194302197`*^9}, {3.677620014135724*^9, 
   3.677620017372862*^9}, {3.677620350838065*^9, 3.677620354205064*^9}, 
   3.677620679525381*^9, 3.677620715263582*^9, {3.677621534714079*^9, 
   3.6776215410162067`*^9}, {3.6776237719870863`*^9, 3.677623850436387*^9}, {
   3.67762389136626*^9, 3.677623941003091*^9}, {3.677623975482751*^9, 
   3.67762399048564*^9}, {3.67762402427454*^9, 3.677624077389977*^9}, 
   3.6776241158234587`*^9, {3.677624411079606*^9, 3.677624454703225*^9}, {
   3.677624505596109*^9, 3.677624509037381*^9}, 3.677624624778687*^9, {
   3.677625150112187*^9, 3.6776252291069317`*^9}, {3.67762561886243*^9, 
   3.6776256236968327`*^9}, {3.67765216960443*^9, 3.677652179043187*^9}, {
   3.6776558667631063`*^9, 3.6776558969369917`*^9}, {3.6776559649886417`*^9, 
   3.677655998426406*^9}, {3.677656073777437*^9, 3.677656111493224*^9}, {
   3.677656158461092*^9, 3.677656165739896*^9}, {3.677656987776925*^9, 
   3.677656996107967*^9}, {3.677657052756076*^9, 3.677657083404785*^9}, {
   3.67765740565702*^9, 3.677657406821931*^9}, 3.6867291298522577`*^9}],

Cell["Tests:", "Text",
 CellChangeTimes->{{3.677626762333783*^9, 3.677626766498147*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"test", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"10", ",", 
    RowBox[{"3", "^", "3"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.677621419849772*^9, 3.677621447011322*^9}, {
   3.677624218967613*^9, 3.677624219997704*^9}, 3.67762605142292*^9, {
   3.677626105503882*^9, 3.6776261064648533`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "7", ",", "6", ",", "5", ",", "8", ",", "3", ",", "7", ",", "9", 
   ",", "1", ",", "7", ",", "10", ",", "0", ",", "10", ",", "10", ",", "2", 
   ",", "5", ",", "4", ",", "7", ",", "8", ",", "0", ",", "10", ",", "3", ",",
    "2", ",", "3", ",", "3", ",", "10", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.677621427258157*^9, 3.677621454294983*^9}, {
   3.677624191439971*^9, 3.677624235807062*^9}, 3.677624635687426*^9, 
   3.677624696135336*^9, 3.677626051821685*^9, 3.677626107710628*^9, 
   3.686729160617234*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Partition", "[", 
   RowBox[{"test", ",", "9"}], "]"}], " ", "//", " ", "MatrixForm"}]], "Input",\

 CellChangeTimes->{{3.6776262017770033`*^9, 3.677626214767232*^9}, {
  3.677627074381339*^9, 3.6776270760477943`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"6", "2", "1", "5", "4", "4", "1", "0", "3"},
     {"0", "1", "9", "10", "4", "0", "1", "8", "0"},
     {"7", "4", "10", "9", "9", "3", "10", "5", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.677626209736603*^9, 3.6776262152767897`*^9}, 
   3.67762707646996*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"bestResponsesForPlayer", "[", 
   RowBox[{"test", ",", "3"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.6776241963084307`*^9, 3.677624224047741*^9}, {
   3.677625740050193*^9, 3.6776257550189533`*^9}, 3.6776260408971987`*^9, 
   3.68672918391147*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "5", ",", "8", ",", "10", ",", "11", ",", "13", ",", 
   "14", ",", "16", ",", "18", ",", "19", ",", "21", ",", "24", ",", "26"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.677624197935368*^9, 3.67762423733016*^9}, 
   3.677624637098565*^9, 3.677624697629294*^9, 3.6776257607631807`*^9, 
   3.6776260547080708`*^9, 3.677626134676412*^9, {3.686729164218902*^9, 
   3.686729184542634*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"bestResponsesForPlayer", "[", 
   RowBox[{"test", ",", "2"}], "]"}], " "}]], "Input",
 CellChangeTimes->{
  3.677624261445459*^9, {3.6776257438899117`*^9, 3.677625756006631*^9}, {
   3.677626043087488*^9, 3.67762604476903*^9}, 3.6867291875408792`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "2", ",", "5", ",", "8", ",", "11", ",", "10", ",", "13", ",", 
   "14", ",", "19", ",", "18", ",", "21", ",", "22", ",", "24"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.677624262929845*^9, 3.677624654451873*^9, 
  3.67762470909623*^9, 3.677625761954715*^9, 3.6776260654802094`*^9, 
  3.6776261674306517`*^9, 3.686729188126761*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"bestResponsesForPlayer", "[", 
   RowBox[{"test", ",", "1"}], "]"}], " "}]], "Input",
 CellChangeTimes->{
  3.677624357851781*^9, {3.6776257493438683`*^9, 3.677625756992085*^9}, 
   3.677626046678865*^9, {3.686729191714713*^9, 3.686729192171896*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5", ",", "2", ",", "7", ",", "8", ",", "13", ",", "14", ",", "11", ",", 
   "16", ",", "21", ",", "18", ",", "19", ",", "24"}], "}"}]], "Output",
 CellChangeTimes->{3.677624358890683*^9, 3.677624676550542*^9, 
  3.677624794441421*^9, 3.677625763134985*^9, 3.677626171166877*^9, 
  3.6867291932763968`*^9}]
}, Open  ]],

Cell[TextData[{
 "Given ",
 StyleBox["{id, value}", "Input"],
 " pairs, return the ids of the maximum values:"
}], "Text",
 CellChangeTimes->{{3.677625935198572*^9, 3.677625972824374*^9}, {
  3.677626781540379*^9, 3.677626783731469*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"maxIDs", "[", "list_", "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{"First", ",", 
     RowBox[{"MaximalBy", "[", 
      RowBox[{"list", ",", "Last"}], "]"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6775309092034197`*^9, 3.67753091333193*^9}, {
   3.6775309866701117`*^9, 3.677531026533512*^9}, {3.677531110615609*^9, 
   3.677531128166317*^9}, 3.686729000632675*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxIDs", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6775311301318483`*^9, 3.677531136984159*^9}, {
   3.677618524608738*^9, 3.677618536712688*^9}, 3.677618827399055*^9, {
   3.677623147057523*^9, 3.677623160381366*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.677531132629632*^9, 3.677531137661749*^9}, {
   3.6776185259123363`*^9, 3.6776185378795347`*^9}, 3.6776188280894833`*^9, {
   3.6776231555470123`*^9, 3.677623161803945*^9}, 3.686729007742916*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Executing a Frame", "Subsection",
 CellChangeTimes->{{3.686729675128396*^9, 3.686729676884775*^9}, {
  3.686729717722496*^9, 3.686729718997245*^9}, {3.687209865910583*^9, 
  3.687209869563848*^9}}],

Cell[CellGroupData[{

Cell["Step 1: Find Nash equilibria at t=1", "Subsubsection",
 CellChangeTimes->{{3.686729680354892*^9, 3.686729690415597*^9}, 
   3.6872099839901943`*^9}],

Cell[TextData[{
 "Procedure:\n* Get starting game state.\n* For each player, get nearby \
tactic vectors at t=1.\n* Get all combinations of these tactics using Tuples.\
\n* Play out each of these 1-move games.\n* Get the payoff value of each \
game.\n* Organize the payoffs into a list structure.\n* Send the list into ",
 StyleBox["nashEquilibria", "Input"],
 ".\n* Determine the minimax value - the minimum amount each player is \
guaranteed to get at t=1."
}], "Text",
 CellChangeTimes->{{3.686750098893577*^9, 3.686750281151823*^9}, {
  3.686756367296549*^9, 3.686756398610711*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"minimaxVector", "[", "initState_", "]"}], " ", ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"statesAtT1", ",", "payoffVectors", ",", "listOfNashPayoffs"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"statesAtT1", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"updateState", "[", 
          RowBox[{"initState", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"matrixPermutations", "[", 
         RowBox[{"initState", "[", "\"\<tactics\>\"", "]"}], "]"}]}], "]"}]}],
      ";", " ", "\[IndentingNewLine]", 
     RowBox[{"payoffVectors", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"payoff", "[", 
          RowBox[{
           RowBox[{"#", "[", "\"\<util\>\"", "]"}], ",", 
           RowBox[{"#", "[", "\"\<dx\>\"", "]"}]}], "]"}], "&"}], ",", 
        "statesAtT1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"listOfNashPayoffs", " ", "=", " ", 
      RowBox[{"Extract", "[", 
       RowBox[{"payoffVectors", ",", 
        RowBox[{"Map", "[", 
         RowBox[{"List", ",", 
          RowBox[{"nashEquilibria", "[", "payoffVectors", "]"}]}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"playerMinimum", "[", "listOfNashPayoffs", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.686753984909956*^9, 3.686754012150361*^9}, {
   3.686754249585479*^9, 3.686754271386701*^9}, {3.686754301651187*^9, 
   3.686754308425995*^9}, {3.686754453692793*^9, 3.6867544690893917`*^9}, {
   3.686754652569025*^9, 3.6867546574234533`*^9}, {3.686754769995648*^9, 
   3.686754771772498*^9}, {3.686755271394785*^9, 3.686755271829823*^9}, {
   3.686755328294531*^9, 3.686755356250552*^9}, {3.686755427036847*^9, 
   3.686755437658924*^9}, {3.686755539369955*^9, 3.686755599125741*^9}, {
   3.686755671913506*^9, 3.6867556826286716`*^9}, {3.686755749109079*^9, 
   3.68675577841426*^9}, {3.686755937793577*^9, 3.686755939101944*^9}, 
   3.686756018739641*^9, {3.686756210448373*^9, 3.686756293843213*^9}, 
   3.686862886018434*^9, {3.686863334246456*^9, 3.6868633410546703`*^9}, {
   3.6868634270643187`*^9, 3.686863427840077*^9}, {3.6868634790943117`*^9, 
   3.686863484699575*^9}, {3.686863825205646*^9, 3.6868638316456127`*^9}, {
   3.687108872384495*^9, 3.687108879978014*^9}, 3.6871090915224857`*^9}],

Cell[BoxData[
 RowBox[{"g", "=", "randomGameState"}]], "Input",
 CellChangeTimes->{{3.687209416424296*^9, 3.687209422519341*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"minimaxVector", "[", "g", "]"}], " "}]], "Input",
 CellChangeTimes->{
  3.686754346104463*^9, {3.6867556057328176`*^9, 3.6867556077225313`*^9}, 
   3.686755649847742*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "0.`", ",", "0.14928159732539095`"}], "}"}]], "Output",
 CellChangeTimes->{{3.687109080377593*^9, 3.687109099435381*^9}, 
   3.687110462356538*^9, {3.6871270459665833`*^9, 3.687127064664427*^9}, 
   3.687174083491585*^9, 3.6871741409557743`*^9, {3.687174189861897*^9, 
   3.687174209697958*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step 2: Find intertemporal equilibria", "Subsubsection",
 CellChangeTimes->{{3.68672969377756*^9, 3.686729706398213*^9}}],

Cell["\<\
Procedure:
* From the initial game state, generate a \[OpenCurlyDoubleQuote]line of play\
\[CloseCurlyDoubleQuote] (sequence of tactic matrices), to a depth of d
* Play out the line and compute the intertemporal payoff
* Identify lines where the intertemporal payoff > minimax vector\
\>", "Text",
 CellChangeTimes->{{3.686863889474177*^9, 3.686863905984494*^9}, {
  3.6868641394996033`*^9, 3.686864196749546*^9}, {3.686864322211357*^9, 
  3.686864332737962*^9}, {3.6868645418571444`*^9, 3.686864618484544*^9}, {
  3.686864726427346*^9, 3.686864748757517*^9}, {3.686864782476219*^9, 
  3.6868647859805202`*^9}, {3.686986811442383*^9, 3.68698684817117*^9}, {
  3.6869919894528923`*^9, 3.686991994864613*^9}, {3.6871091379722757`*^9, 
  3.687109138713759*^9}, {3.6871100566303577`*^9, 3.687110104568982*^9}}],

Cell[TextData[{
 "The following function picks a random game path and determines whether it\
\[CloseCurlyQuote]s an intertemporal equilibria.  If it is, it returns ",
 StyleBox["{dx, iuVector, path}", "Input"],
 "; otherwise, it returns ",
 StyleBox["Nothing", "Input"],
 "."
}], "Text",
 CellChangeTimes->{{3.687108384764097*^9, 3.6871085023090467`*^9}, {
  3.687108534072967*^9, 3.687108556148745*^9}, {3.687212026824625*^9, 
  3.687212037489491*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"searchForIntertemporalEquilibria", "[", 
   RowBox[{"initState_", ",", "minimaxVec_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"line", ",", "iuVec"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"line", "=", " ", 
      RowBox[{"playTacticMatrixSequence", "[", 
       RowBox[{"initState", ",", 
        RowBox[{"randomMatrixSequence", "[", 
         RowBox[{"initState", "[", "\"\<tactics\>\"", "]"}], "]"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"iuVec", " ", "=", " ", 
      RowBox[{"intertemporalUtilityVector", "[", "line", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"listDominatesQ", "[", 
        RowBox[{"iuVec", ",", " ", "minimaxVec"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"lineDistance", "[", "line", "]"}], ",", "iuVec", ",", 
         "line"}], "}"}], ",", "Nothing"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.686990615511425*^9, 3.686990617958704*^9}, {
   3.6871082490458517`*^9, 3.687108322033064*^9}, {3.687108365350122*^9, 
   3.687108376363585*^9}, 3.687108523878345*^9, {3.6871085669506598`*^9, 
   3.687108617885489*^9}, {3.687108660665803*^9, 3.68710867414988*^9}, {
   3.687109538132861*^9, 3.6871095397928753`*^9}, {3.687127019306979*^9, 
   3.687127019641602*^9}, {3.687128094109305*^9, 3.687128097831356*^9}, {
   3.687170039180162*^9, 3.687170040033407*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"searchForIntertemporalEquilibria", "[", 
   RowBox[{"g", ",", 
    RowBox[{"{", 
     RowBox[{"0.005", ",", "0.000009", ",", "0.00012"}], "}"}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.6869851089616423`*^9, 3.686985128792638*^9}, {
  3.686986483711355*^9, 3.68698648527493*^9}, {3.687108684633953*^9, 
  3.687108688225618*^9}, {3.6871092004296713`*^9, 3.687109252112814*^9}, {
  3.6871095909452887`*^9, 3.687109603465684*^9}, {3.6871270293484488`*^9, 
  3.6871270332382812`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9323295302344554`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0.012675962446224012`", ",", "0.13694619538716504`", ",", 
     "0.0002807047434488252`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"sizes\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "0.04958028164710382`", ",", "0.5775912420091778`", ",", 
          "0.021957324814209533`"}], "}"}]}], ",", 
       RowBox[{"\<\"tactics\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.9815269536971788`", ",", 
            RowBox[{"-", "0.04525669833109544`"}], ",", 
            "0.011318886473688842`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.004100895735801083`", ",", "0.8930958181613554`", ",", 
            RowBox[{"-", "0.03850559457105661`"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.014372150567020018`", ",", 
            RowBox[{"-", "0.061647483507549165`"}], ",", 
            "0.9501755189552545`"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"util\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "0.0016263736712794278`", ",", "0.753354453311788`", ",", 
          "0.0002122738160954608`"}], "}"}]}], ",", 
       RowBox[{"\<\"dx\"\>", "\[Rule]", "0"}]}], "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"sizes\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "0.030781294894272594`", ",", "0.5570488405993752`", ",", "0"}], 
         "}"}]}], ",", 
       RowBox[{"\<\"tactics\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.8273515958029675`", ",", 
            RowBox[{"-", "0.0068604768255464505`"}], ",", 
            "0.03754154384602984`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0.11299592502733483`", ",", "0.9439201570835084`", ",", 
            "0.014666748836725594`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.05965247916969772`", ",", 
            RowBox[{"-", "0.04921936609094522`"}], ",", 
            "0.9477917073172445`"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"util\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "0.0005340803499735617`", ",", "0.7440850386502713`", ",", "0.`"}], 
         "}"}]}], ",", 
       RowBox[{"\<\"dx\"\>", "\[Rule]", "0.21309839586666154`"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"sizes\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "0.14960755669274967`", ",", "0.4682923310694534`", ",", "0"}], 
         "}"}]}], ",", 
       RowBox[{"\<\"tactics\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "0.6858281366466809`", ",", "0.11533717441506405`", ",", 
            "0.04126703346823853`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.0015724299237534153`"}], ",", 
            "0.8409272243578738`", ",", "0.036479609162427214`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.3125994334295658`", ",", 
            RowBox[{"-", "0.04373560122706223`"}], ",", 
            "0.9222533573693342`"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"util\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "0.03582142702495796`", ",", "0.6209429080476994`", ",", "0.`"}], 
         "}"}]}], ",", 
       RowBox[{"\<\"dx\"\>", "\[Rule]", "0.35192148047669736`"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"sizes\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "0.20218065784101819`", ",", "0.39948135510982974`", ",", "0"}], 
         "}"}]}], ",", 
       RowBox[{"\<\"tactics\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "0.7785056319467114`", ",", "0.09151370488834014`", ",", 
            "0.10498240844376858`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0.0008047164001199466`", ",", "0.8525456116036898`", ",", 
            "0.10771376737474146`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.22068965165316856`", ",", 
            RowBox[{"-", "0.055940683507970164`"}], ",", 
            "0.78730382418149`"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"util\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "0.09168877056937075`", ",", "0.5031626806815728`", ",", "0.`"}], 
         "}"}]}], ",", 
       RowBox[{"\<\"dx\"\>", "\[Rule]", "0.2126946553489108`"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"sizes\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "0.2426191986343197`", ",", "0.36620084667874747`", ",", 
          "0.07172259466325895`"}], "}"}]}], ",", 
       RowBox[{"\<\"tactics\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "0.7091081577241198`", ",", "0.12422512785100752`", ",", 
            "0.15341336393952232`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0.058696363662437044`", ",", "0.8572773258674328`", ",", 
            "0.15275581794011342`"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.23219547861344295`", ",", 
            RowBox[{"-", "0.018497546281559852`"}], ",", 
            "0.6938308181203643`"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"util\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "0.14635370998075592`", ",", "0.4096275768307676`", ",", 
          "0.006953937885534748`"}], "}"}]}], ",", 
       RowBox[{"\<\"dx\"\>", "\[Rule]", "0.15461499854218563`"}]}], 
      "\[RightAssociation]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.686985143944384*^9, {3.68698646452908*^9, 3.686986485655074*^9}, {
   3.68710869298498*^9, 3.687108696867282*^9}, 3.687108738200082*^9, 
   3.687109125400402*^9, {3.687109201829598*^9, 3.6871092571644573`*^9}, {
   3.687109587278388*^9, 3.6871096063499393`*^9}, {3.687127022956944*^9, 
   3.687127033912342*^9}, {3.687127075363999*^9, 3.687127085429687*^9}, 
   3.687127903992279*^9, {3.687128104114523*^9, 3.6871281386125526`*^9}, {
   3.6871282547022743`*^9, 3.687128256234829*^9}, {3.687170048230197*^9, 
   3.687170054860609*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run a frame", "Subsubsection",
 CellChangeTimes->{{3.673302243677259*^9, 3.673302244208345*^9}, {
  3.687209893489855*^9, 3.687209894358488*^9}, {3.687210018386688*^9, 
  3.687210018498272*^9}}],

Cell[TextData[{
 "Run one frame of the simulation.  The output is a list of ",
 StyleBox["{dx, iuVector, listOfGameStates}", "Input"],
 " objects, ranked by distance (increasing)."
}], "Text",
 CellChangeTimes->{{3.677152451691313*^9, 3.677152464919187*^9}, {
  3.6771525321375217`*^9, 3.677152548451873*^9}, {3.6771581677483873`*^9, 
  3.6771581836060257`*^9}, {3.677159398781104*^9, 3.677159403108087*^9}, {
  3.67717002553083*^9, 3.677170030421096*^9}, {3.6776945841880827`*^9, 
  3.677694584366559*^9}, {3.6780933229368477`*^9, 3.678093339416192*^9}, {
  3.687212185289262*^9, 3.6872122423443947`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"runFrame", "[", "initialState_", "]"}], " ", ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"minMax", "=", 
      RowBox[{"minimaxVector", "[", "initialState", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Sort", "[", 
     RowBox[{
      RowBox[{"Reap", "[", "\[IndentingNewLine]", 
       RowBox[{"ParallelDo", "[", 
        RowBox[{
         RowBox[{"ParallelSow", "[", "\[IndentingNewLine]", 
          RowBox[{"searchForIntertemporalEquilibria", "[", 
           RowBox[{"initialState", ",", "minMax"}], "]"}], 
          "\[IndentingNewLine]", "]"}], ",", 
         RowBox[{"{", "probes", "}"}]}], "]"}], "\[IndentingNewLine]", "]"}], 
      "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "  ", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.677158213366316*^9, 3.677158220094501*^9}, {
   3.677158259088509*^9, 3.677158266151792*^9}, {3.677158310281102*^9, 
   3.677158319268057*^9}, {3.677158409474554*^9, 3.677158425037343*^9}, {
   3.677158895543358*^9, 3.67715891509628*^9}, {3.677158950210545*^9, 
   3.677158996655775*^9}, {3.6771590683935547`*^9, 3.677159069096344*^9}, {
   3.677159105946067*^9, 3.677159153501893*^9}, 3.6771592346341467`*^9, {
   3.677159513750228*^9, 3.677159517809225*^9}, {3.677159915535334*^9, 
   3.6771600048884974`*^9}, {3.67716059388165*^9, 3.677160625982623*^9}, {
   3.677160905596195*^9, 3.677161003849832*^9}, {3.6771697804533997`*^9, 
   3.6771698040873337`*^9}, {3.677169851982736*^9, 3.6771698679240427`*^9}, {
   3.677169923959364*^9, 3.6771699273427477`*^9}, {3.67716996957824*^9, 
   3.677169982563561*^9}, {3.677170055800169*^9, 3.67717005612514*^9}, {
   3.677170235815547*^9, 3.677170250612226*^9}, {3.677170672261653*^9, 
   3.677170692319615*^9}, {3.6771707982481833`*^9, 3.6771708208909817`*^9}, 
   3.677170863711299*^9, {3.67717102515862*^9, 3.677171038697098*^9}, {
   3.6776634954041452`*^9, 3.677663495852461*^9}, {3.677664734195283*^9, 
   3.677664765834435*^9}, {3.677664810056547*^9, 3.677664857333562*^9}, {
   3.677664930660131*^9, 3.6776649636862497`*^9}, {3.677665034466419*^9, 
   3.677665042883322*^9}, {3.677665116613112*^9, 3.6776651420090313`*^9}, {
   3.677665226379847*^9, 3.6776652381139517`*^9}, {3.677665297608923*^9, 
   3.677665319438418*^9}, {3.677665489870858*^9, 3.6776655021135063`*^9}, {
   3.677665933857876*^9, 3.6776659351717033`*^9}, {3.677693781583912*^9, 
   3.677693785203126*^9}, {3.677694054757464*^9, 3.677694090096889*^9}, {
   3.677694550412373*^9, 3.6776945588870773`*^9}, {3.6777539188188353`*^9, 
   3.677754019207638*^9}, {3.677754068926114*^9, 3.677754141138013*^9}, {
   3.677754185418483*^9, 3.6777541867388678`*^9}, 3.67775550380059*^9, {
   3.67775555478878*^9, 3.6777555558988*^9}, {3.677755835549327*^9, 
   3.67775587068985*^9}, {3.677756443602984*^9, 3.677756444781728*^9}, {
   3.6777566921024714`*^9, 3.677756707207494*^9}, {3.677757624228931*^9, 
   3.677757624760504*^9}, {3.677757745382113*^9, 3.6777577785303717`*^9}, {
   3.677757820858149*^9, 3.677757837812312*^9}, {3.677758336088427*^9, 
   3.6777584110659657`*^9}, {3.677758592810258*^9, 3.677758659857205*^9}, {
   3.6777587158092623`*^9, 3.677758720248735*^9}, {3.678093301918771*^9, 
   3.678093329663007*^9}, {3.678093520625969*^9, 3.67809352431187*^9}, 
   3.6780974915581913`*^9, 3.6780975603255157`*^9, {3.678097600798777*^9, 
   3.678097619616878*^9}, {3.678097669640409*^9, 3.678097673986726*^9}, {
   3.6780978325505257`*^9, 3.678097838390514*^9}, {3.678101081276104*^9, 
   3.67810111033288*^9}, {3.6781012129699793`*^9, 3.678101222346217*^9}, {
   3.678101369232902*^9, 3.6781015046184607`*^9}, {3.678101640259507*^9, 
   3.678101662954915*^9}, {3.6781025997714376`*^9, 3.6781026521124763`*^9}, 
   3.678108157858386*^9, {3.678108217756809*^9, 3.6781083669978533`*^9}, {
   3.678108423898158*^9, 3.678108615150942*^9}, {3.678108729801306*^9, 
   3.678108750272729*^9}, {3.678108807037827*^9, 3.67810881064863*^9}, {
   3.678108897759657*^9, 3.678109007832343*^9}, {3.678109622911975*^9, 
   3.6781096232396193`*^9}, {3.678109789133535*^9, 3.678109893929384*^9}, 
   3.687174621395557*^9, {3.687207837189521*^9, 3.687207854942574*^9}, {
   3.687207886880907*^9, 3.68720793710181*^9}, {3.6872083502955647`*^9, 
   3.687208363437571*^9}, {3.687208678876706*^9, 3.687208680585001*^9}, {
   3.687212816788732*^9, 3.68721285211277*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetSharedFunction", "[", "ParallelSow", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParallelSow", "[", "expr_", "]"}], " ", ":=", " ", 
   RowBox[{"Sow", "[", "expr", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.68699613666035*^9, 3.6869961608735647`*^9}}],

Cell[BoxData[
 RowBox[{"runFrame", "[", "randomGameState", "]"}]], "Input",
 CellChangeTimes->{{3.687207940753374*^9, 3.687207943921256*^9}, {
  3.6872122751550407`*^9, 3.687212277229995*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Display frame outcomes", "Subsubsection",
 CellChangeTimes->{{3.6872099980015907`*^9, 3.687210016187234*^9}}],

Cell[TextData[{
 "Show the sequences that are intertemporal equilibria for a given frame.  \
The output is a list of ",
 StyleBox["{dx, displayLineOfPlay}", "Input"],
 " objects."
}], "Text",
 CellChangeTimes->{{3.6777657547664747`*^9, 3.677765778503668*^9}, 
   3.687207872489923*^9, {3.687212656276697*^9, 3.687212668923411*^9}, {
   3.687212712076171*^9, 3.68721273337001*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"showLinesOfPlay", "[", 
   RowBox[{"linesOfPlay_", ",", " ", "showMetadataQ_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"displayLineOfPlay", "[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", "showMetadataQ"}], "]"}]}], 
      "}"}], "&"}], ",", "linesOfPlay"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6777656191740007`*^9, 3.677765681294352*^9}, {
   3.6872081730886917`*^9, 3.687208176006845*^9}, 3.687212527553018*^9, {
   3.687212598045718*^9, 3.6872126422098427`*^9}, 3.687212737402625*^9}],

Cell[BoxData[
 RowBox[{"showLinesOfPlay", "[", 
  RowBox[{"%", ",", "False"}], "]"}]], "Input",
 CellChangeTimes->{{3.6872081786589613`*^9, 3.6872081825706043`*^9}, {
   3.6872123200932217`*^9, 3.687212322534348*^9}, 3.687212648400386*^9, {
   3.687212975460205*^9, 3.687212975597941*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Executing a Reel", "Subsection",
 CellChangeTimes->{{3.687209928642745*^9, 3.687209931049802*^9}}],

Cell["TODO", "Text",
 CellChangeTimes->{{3.678875268421237*^9, 3.678875268736908*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization", "Subsection",
 CellChangeTimes->{
  3.66110396285262*^9, {3.6611042592050457`*^9, 3.661104266339779*^9}, {
   3.661121116464806*^9, 3.6611211179482937`*^9}, {3.673302706683947*^9, 
   3.6733027071838617`*^9}}],

Cell[CellGroupData[{

Cell["State grid", "Subsubsection",
 CellChangeTimes->{{3.6478124418773317`*^9, 3.647812444981423*^9}, {
  3.661104535632756*^9, 3.661104536272114*^9}}],

Cell["\<\
This simple visualization shows, in each column, an agent\[CloseCurlyQuote]s \
ID, size, and tactic vector.  The unshaded cells together form the tactic \
matrix.  All values are rounded (including the IDs and sizes!).  Each column \
in the grid shows how each node (at the top) is allocating its power.  The \
main matrix diagonal shows how much power the various nodes are allocating to \
themselves.  \
\>", "Text",
 CellChangeTimes->{{3.627726345648408*^9, 3.627726394036725*^9}, 
   3.6278842900114794`*^9, {3.6278843387790785`*^9, 3.627884353606991*^9}, {
   3.6278843930173364`*^9, 3.6278844907906933`*^9}, {3.644076101066875*^9, 
   3.644076144437312*^9}, {3.661104544573661*^9, 3.66110461108701*^9}, {
   3.661104672433152*^9, 3.6611047271051617`*^9}, {3.6611048514515047`*^9, 
   3.661104875605879*^9}, {3.661104926348112*^9, 3.6611049990049553`*^9}, {
   3.678111276651342*^9, 3.6781113006150217`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"showStateGrid", "[", "state_", "]"}], " ", ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ids", ",", 
      RowBox[{"nodes", " ", "=", " ", 
       RowBox[{"state", "[", 
        RowBox[{"[", "\"\<sizes\>\"", "]"}], "]"}]}], ",", " ", 
      RowBox[{"tactics", " ", "=", " ", 
       RowBox[{"state", "[", 
        RowBox[{"[", "\"\<tactics\>\"", "]"}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ids", " ", "=", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", 
        RowBox[{"Length", "[", "nodes", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
          RowBox[{"Catenate", "[", 
           RowBox[{"{", 
            RowBox[{"ids", ",", 
             RowBox[{"Round", "[", 
              RowBox[{"nodes", ",", "0.001"}], "]"}], ",", 
             RowBox[{"Round", "[", 
              RowBox[{"tactics", ",", "0.01"}], "]"}]}], "}"}], "]"}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"Length", "[", "ids", "]"}]}], "]"}], ",", " ", 
       RowBox[{"Frame", " ", "\[Rule]", "All"}], ",", " ", 
       RowBox[{"Background", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"None", ",", "None"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"LightGray", ",", "LightGray", ",", "None"}], "}"}]}], 
         "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6440760388826523`*^9, {3.6568002029796543`*^9, 3.656800211149168*^9}, {
   3.661351994856771*^9, 3.661352073892398*^9}, {3.661352440183284*^9, 
   3.661352495302738*^9}, 3.661352545915004*^9, {3.6613526062606983`*^9, 
   3.661352617799048*^9}, {3.6613527220549793`*^9, 3.66135272934559*^9}, {
   3.673301850967966*^9, 3.673301874025426*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showStateGrid", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<sizes\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], ",", 
    RowBox[{"\"\<tactics\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}]}]}], "|>"}], "]"}]], "Input",\

 CellChangeTimes->{{3.627725693327739*^9, 3.6277257067897377`*^9}, {
   3.627725945298032*^9, 3.62772596837844*^9}, {3.627726230221322*^9, 
   3.6277263225299683`*^9}, {3.627884302379747*^9, 3.6278843056869583`*^9}, {
   3.644076069862927*^9, 3.644076075651513*^9}, {3.647812463069755*^9, 
   3.647812478296856*^9}, 3.656078011848942*^9, {3.661352557181188*^9, 
   3.661352588259201*^9}, 3.673301882528146*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "2"},
    {"1.`", "1.`"},
    {"1.`", "0.5`"},
    {"0.`", "0.5`"}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {None, None}, "Rows" -> {
       GrayLevel[0.85], 
       GrayLevel[0.85], None}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.661352589135229*^9, 3.661352620796782*^9, 3.6613526716687717`*^9, 
   3.6733015874740133`*^9, {3.6733018791905203`*^9, 3.673301883074424*^9}, 
   3.678111260075335*^9, 3.686729248242928*^9, 3.6872093138273478`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.661351989031644*^9, 3.6613519894310102`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Relationship graph", "Subsubsection",
 CellChangeTimes->{{3.6481403723815203`*^9, 3.6481403758599358`*^9}, 
   3.648140730639195*^9, 3.648328780743081*^9, 3.661105048115101*^9}],

Cell[TextData[{
 "The ",
 StyleBox["displayGraph", "Input"],
 " function provides a visual representation of the interrelationships among \
the agents.  Positive edges are green, negative are red.  Thicker lines \
indicate a larger transfer of power.  The background color is orange if the \
state is a Nash equilibrium (of the parent state in the game tree)."
}], "Text",
 CellChangeTimes->{{3.628059861219839*^9, 3.6280599170391407`*^9}, {
   3.6280604383226075`*^9, 3.6280604416818566`*^9}, {3.644077491706378*^9, 
   3.644077540727626*^9}, {3.648140681137499*^9, 3.648140681619035*^9}, {
   3.648140712853804*^9, 3.6481407175268087`*^9}, {3.661105069805784*^9, 
   3.661105080232719*^9}, 3.6637083837065163`*^9, {3.663715362961177*^9, 
   3.663715384406617*^9}, {3.663715807759367*^9, 3.66371581734306*^9}, {
   3.67451028632089*^9, 3.674510315661511*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"displayGraph", "[", 
   RowBox[{"state_", ",", " ", "showPercentages_"}], "]"}], " ", ":=", " ", 
  RowBox[{"displayGraph", "[", 
   RowBox[{"state", ",", " ", "showPercentages", ",", 
    RowBox[{"{", "}"}]}], "]"}], " "}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6783742856325283`*^9, 3.6783742994809093`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"displayGraph", "[", 
    RowBox[{"state_", ",", " ", "showPercentages_", ",", "cityList_"}], "]"}],
    " ", ":=", " ", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ids", ",", 
       RowBox[{"nodes", " ", "=", " ", 
        RowBox[{"state", "[", 
         RowBox[{"[", "\"\<sizes\>\"", "]"}], "]"}]}], ",", " ", 
       RowBox[{"tactics", " ", "=", " ", 
        RowBox[{"state", "[", 
         RowBox[{"[", "\"\<tactics\>\"", "]"}], "]"}]}], ",", "edges", ",", 
       "subgraph", ",", "vertexLabels", ",", "edgeLabels", ",", "edgeStyles", 
       ",", "nashQ", ",", "graph"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ids", " ", "=", " ", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{"Length", "[", "nodes", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"nashQ", " ", "=", " ", 
         RowBox[{"Last", "[", 
          RowBox[{"state", "[", "\"\<nashPath\>\"", "]"}], "]"}]}], ";"}], 
       " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"subgraph", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "/.", " ", 
           RowBox[{"0", "\[Rule]", " ", "Infinity"}]}], "&"}], ",", 
         RowBox[{"zeroOut", "[", 
          RowBox[{"tactics", ",", "nodes"}], "]"}]}], "]"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"In", " ", "a", " ", "WeightedAdjacencyGraph"}], ",", " ", 
        RowBox[{"Infinity", " ", "=", " ", 
         RowBox[{"no", " ", 
          RowBox[{"edge", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"edges", " ", "=", " ", 
       RowBox[{"EdgeList", "[", 
        RowBox[{"WeightedAdjacencyGraph", "[", 
         RowBox[{"Transpose", "[", "subgraph", "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"vertexLabels", " ", "=", " ", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "#2", "]"}], "\[Rule]", " ", 
           RowBox[{"\"\<A\>\"", "<>", 
            RowBox[{"ToString", "[", "#", "]"}], "<>", "\[IndentingNewLine]", 
            
            RowBox[{"If", "[", 
             RowBox[{"showPercentages", ",", 
              RowBox[{"\"\< (\>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"Round", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"tactics", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"First", "[", "#2", "]"}], ",", 
                    RowBox[{"First", "[", "#2", "]"}]}], "]"}], "]"}], "*", 
                   "100"}], ",", "1"}], "]"}], "]"}], "<>", "\"\<)\>\""}], 
              ",", "\"\<\>\""}], "]"}]}]}], "\[IndentingNewLine]", "&"}], ",",
          "ids"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"edgeLabels", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", " ", "\[Rule]", " ", 
           RowBox[{"Round", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"tactics", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], " ", ")"}],
               "*", "100"}], " ", ",", "1"}], "]"}]}], "   ", "&"}], ",", 
         "edges"}], "]"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"label", " ", "=", " ", 
        RowBox[{"tactic", "%", " ", "*", " ", "100"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"edgeStyles", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", " ", "\[Rule]", "\[IndentingNewLine]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Thickness", "[", 
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"tactics", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], " ", "*", 
                " ", 
                RowBox[{"nodes", "[", 
                 RowBox[{"[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], " ", "*", 
                " ", "0.2"}], "  ", "]"}], "]"}], ",", "   ", 
             RowBox[{"(*", " ", 
              RowBox[{"thickness", " ", "=", " ", 
               RowBox[{
               "size", " ", "*", " ", "tactic", "%", " ", "*", " ", "scaling",
                 " ", "factor"}]}], " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"getEdgeColor", "[", 
              RowBox[{"tactics", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "  ", "]"}],
              ",", "\[IndentingNewLine]", 
             RowBox[{"Arrowheads", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"cityList", "\[Equal]", 
                 RowBox[{"{", "}"}]}], ",", "0.1", ",", "0.04"}], "]"}], 
              "]"}]}], "}"}]}], "\[IndentingNewLine]", "&"}], ",", "edges"}], 
        "]"}]}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"graph", "=", 
       RowBox[{"Graph", "[", "\[IndentingNewLine]", 
        RowBox[{"WeightedAdjacencyGraph", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "subgraph", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"VertexSize", " ", "\[Rule]", " ", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"First", "[", "#2", "]"}], "\[Rule]", " ", "#"}], 
              "&"}], ",", 
             RowBox[{"nodes", "/", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"cityList", "\[Equal]", 
                 RowBox[{"{", "}"}]}], ",", "10", ",", "2"}], "]"}]}]}], " ", 
            "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"VertexLabels", "\[Rule]", " ", "vertexLabels"}], ",", "  ",
           "\[IndentingNewLine]", 
          RowBox[{"EdgeLabels", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{"showPercentages", ",", "edgeLabels", ",", "\"\<\>\""}], 
            "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"EdgeStyle", "\[Rule]", "edgeStyles"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"VertexCoordinates", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"cityList", "\[Equal]", 
              RowBox[{"{", "}"}]}], ",", "Automatic", ",", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Reverse", "[", 
                 RowBox[{
                  RowBox[{"GeoPosition", "[", "#", "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}], ",", 
               "cityList"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}],
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "graph", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Keep", " ", "the", " ", "stuff", " ", 
        RowBox[{"below", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "showPercentages"}], ",", 
        RowBox[{"Return", "[", "graph", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Column", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{"{", "graph", "}"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<IU: \>\"", ",", 
             RowBox[{"Round", "[", 
              RowBox[{
               RowBox[{"state", "[", "\"\<IU\>\"", "]"}], ",", "0.01"}], 
              "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<dx: \>\"", ",", 
             RowBox[{"Round", "[", 
              RowBox[{
               RowBox[{"state", "[", "\"\<dx\>\"", "]"}], ",", "0.01"}], 
              "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<depth: \>\"", ",", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"state", "[", "\"\<path\>\"", "]"}], "]"}], "-", 
              "1"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6280568279411507`*^9, 3.6280568390085487`*^9}, {
   3.6280568740429688`*^9, 3.6280569005226693`*^9}, {3.628056936199526*^9, 
   3.6280570325389185`*^9}, {3.628057083377903*^9, 3.628057148294299*^9}, {
   3.628057190608589*^9, 3.628057212313099*^9}, {3.6280574519773035`*^9, 
   3.628057540033174*^9}, {3.628057600714737*^9, 3.6280576106593847`*^9}, 
   3.6280576507391777`*^9, 3.6280589269512963`*^9, {3.628059718555458*^9, 
   3.628059769318392*^9}, {3.6280598323695397`*^9, 3.628059845943614*^9}, {
   3.628060476016818*^9, 3.6280604875695333`*^9}, {3.6280659330557137`*^9, 
   3.628065937034371*^9}, {3.628067455296295*^9, 3.6280674829617877`*^9}, 
   3.628068286986255*^9, {3.6280683579847193`*^9, 3.628068358966374*^9}, 
   3.6280684155592012`*^9, {3.6285056236601715`*^9, 3.628505639298602*^9}, {
   3.6285342625877943`*^9, 3.628534267669181*^9}, {3.628534303395993*^9, 
   3.628534305667515*^9}, {3.6286798270248885`*^9, 3.6286798399615126`*^9}, {
   3.6286799657283573`*^9, 3.6286799789141474`*^9}, {3.648140243640349*^9, 
   3.6481402701099777`*^9}, {3.648140354247779*^9, 3.648140361295288*^9}, {
   3.648140438026012*^9, 3.64814045143939*^9}, 3.648140513731593*^9, 
   3.64824335659547*^9, {3.648243761930399*^9, 3.64824376885402*^9}, {
   3.656355763875502*^9, 3.656355777492486*^9}, {3.656355817492156*^9, 
   3.656355843881682*^9}, {3.6563559408838453`*^9, 3.656355944161586*^9}, 
   3.6611051267060747`*^9, {3.661351855398322*^9, 3.661351884254476*^9}, {
   3.663699309629766*^9, 3.6636994144294367`*^9}, {3.663699485617937*^9, 
   3.663699631082449*^9}, {3.6636996778510036`*^9, 3.663699791688162*^9}, {
   3.663703083695237*^9, 3.6637030859793797`*^9}, {3.6637031199139423`*^9, 
   3.663703120475754*^9}, {3.6637035084207773`*^9, 3.663703508846878*^9}, 
   3.663703818440526*^9, 3.6637038548374977`*^9, {3.663708670223652*^9, 
   3.6637086796156883`*^9}, {3.663708807220627*^9, 3.663708853096401*^9}, {
   3.6637090925030212`*^9, 3.663709116598096*^9}, {3.663709351318782*^9, 
   3.663709383834383*^9}, {3.663709485586564*^9, 3.6637095326162252`*^9}, {
   3.663709576177616*^9, 3.663709578399065*^9}, {3.6637096399978657`*^9, 
   3.663709670756209*^9}, {3.663710276675123*^9, 3.663710328629795*^9}, {
   3.6637103613760366`*^9, 3.66371036328435*^9}, {3.663710547046011*^9, 
   3.6637105799049807`*^9}, {3.66371078828118*^9, 3.6637107895351048`*^9}, {
   3.6637108806458178`*^9, 3.6637108973230553`*^9}, 3.663710978488104*^9, {
   3.663713638569726*^9, 3.663713683037917*^9}, {3.663713737202433*^9, 
   3.663713747605501*^9}, {3.663713901739875*^9, 3.6637139242155848`*^9}, {
   3.663713955428974*^9, 3.663713987941424*^9}, {3.6637140238905993`*^9, 
   3.663714027990345*^9}, {3.663714076263914*^9, 3.663714116040455*^9}, {
   3.663714343882853*^9, 3.663714352548748*^9}, 3.663714392631131*^9, {
   3.663714464338645*^9, 3.663714484175165*^9}, {3.6637147770260763`*^9, 
   3.663714790559218*^9}, 3.6637149374194117`*^9, {3.663715051451992*^9, 
   3.663715134368589*^9}, 3.6637151956075687`*^9, 3.6637152909095163`*^9, {
   3.663715339507575*^9, 3.663715359849074*^9}, {3.663715394756822*^9, 
   3.663715396597365*^9}, {3.66371580142797*^9, 3.663715802113818*^9}, 
   3.6637158396659813`*^9, {3.6638811563723516`*^9, 3.663881188842375*^9}, 
   3.66388122913341*^9, 3.663881270952773*^9, {3.6638820133159237`*^9, 
   3.663882051520011*^9}, {3.663882311022244*^9, 3.663882364301038*^9}, {
   3.66388282426052*^9, 3.6638828282298937`*^9}, {3.663883214237657*^9, 
   3.663883235905014*^9}, {3.663883668193254*^9, 3.663883680259104*^9}, {
   3.6638839279134893`*^9, 3.663883949713828*^9}, {3.663884032271728*^9, 
   3.66388403381424*^9}, {3.663884072616976*^9, 3.6638841343094673`*^9}, {
   3.6640125162290382`*^9, 3.664012537987557*^9}, {3.6640125692083597`*^9, 
   3.6640126219889708`*^9}, {3.664012762296212*^9, 3.664012864072987*^9}, 
   3.664012904747932*^9, {3.664012951004137*^9, 3.66401295245295*^9}, {
   3.6640130028336363`*^9, 3.664013107500125*^9}, 3.664013187025131*^9, {
   3.66402164395193*^9, 3.664021644417058*^9}, {3.6640245665481443`*^9, 
   3.66402458062358*^9}, {3.664024620086961*^9, 3.6640246212650433`*^9}, {
   3.67330191766171*^9, 3.673301939837592*^9}, {3.673821383364917*^9, 
   3.673821435988654*^9}, {3.674510028638011*^9, 3.67451002916481*^9}, {
   3.674510184376782*^9, 3.6745102675551023`*^9}, {3.674510327181162*^9, 
   3.674510349212306*^9}, {3.67451332728966*^9, 3.6745133371731377`*^9}, {
   3.6756031368843203`*^9, 3.675603155936661*^9}, {3.675603276348927*^9, 
   3.675603353158474*^9}, {3.6756048272609587`*^9, 3.6756048708749523`*^9}, {
   3.675604913099888*^9, 3.6756049311557007`*^9}, {3.675605008929162*^9, 
   3.675605011086343*^9}, {3.675605191946649*^9, 3.675605228489586*^9}, {
   3.6756052608580427`*^9, 3.675605268773822*^9}, {3.675605314239703*^9, 
   3.675605314684664*^9}, {3.67577080100183*^9, 3.675770823587914*^9}, {
   3.677759372459306*^9, 3.6777593838517103`*^9}, {3.678374155844212*^9, 
   3.678374208270978*^9}, {3.6783836607815123`*^9, 3.6783837214547586`*^9}, {
   3.678383756024123*^9, 3.678383786789996*^9}, {3.678383828063591*^9, 
   3.678383855989222*^9}, {3.678384114804449*^9, 3.678384114997292*^9}}],

Cell["\<\
A helper function for the graph visualization that creates red and green \
edges.  \
\>", "Text",
 CellChangeTimes->{{3.628065983651528*^9, 3.628066016864731*^9}, {
  3.6280660668071156`*^9, 3.6280661429840393`*^9}, {3.648140813838114*^9, 
  3.648140835538376*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getEdgeColor", "[", "w_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"w", ">", "0"}], ",", 
     RowBox[{"Darker", "[", 
      RowBox[{"Darker", "[", "Green", "]"}], "]"}], ",", 
     RowBox[{"Darker", "[", "Red", "]"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6280596682188168`*^9, 3.6280596724216175`*^9}, {
  3.628060303966792*^9, 3.62806034796521*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"zeroOut", "[", 
    RowBox[{"matrix_", ",", " ", "nodes_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", " ", 
       RowBox[{"len", " ", "=", " ", 
        RowBox[{"Length", "[", "nodes", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "set", " ", "trace", " ", "tactic", " ", "amounts", " ", "to", " ", 
       "0"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", "#", "]"}], "<", "0.001"}], ",", "0", ",", 
            "#"}], "]"}], "&"}], ",", "matrix", ",", " ", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], " ", ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"change", " ", "to"}], " ", "<", " ", 
        RowBox[{
         RowBox[{
         "0.001", " ", "to", " ", "keep", " ", "zero", " ", "edges", " ", 
          "in"}], " ", "-", " ", 
         RowBox[{
         "more", " ", "stable", " ", "display", " ", "configuration"}]}]}], 
       " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"zero", " ", "out", " ", "self"}], "-", "loops"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "len"}], ",", 
        RowBox[{"i", "++"}], ",", "  ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"m", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "i"}], "]"}], "]"}], " ", "=", " ", "0"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "m", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.663700024927294*^9, 3.663700039480068*^9}, 
   3.663701980627507*^9, {3.663702648227189*^9, 3.6637026823931847`*^9}, 
   3.663710447708794*^9, {3.663713864881123*^9, 3.663713868104526*^9}, {
   3.663715460945999*^9, 3.6637154642235193`*^9}, {3.663883160633544*^9, 
   3.663883161702476*^9}, 3.663883404434367*^9, {3.663883520221277*^9, 
   3.663883559531795*^9}, 3.663884945215908*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"displayGraph", "[", 
  RowBox[{"randomGameState", ",", "False"}], "]"}]], "Input",
 CellChangeTimes->{3.6867292799542437`*^9}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3}, {
       SparseArray[
       Automatic, {3, 3}, 0, {
        1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}], Null}, {
      EdgeLabels -> {""}, EdgeStyle -> {DirectedEdge[2, 1] -> {
           Thickness[0.0018009682537236738`], 
           RGBColor[
            Rational[2, 3], 0, 0], 
           Arrowheads[0.1]}, DirectedEdge[1, 3] -> {
           Thickness[0.011111208129369882`], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.1]}, DirectedEdge[1, 2] -> {
           Thickness[0.01773231883372137], 
           RGBColor[
            Rational[2, 3], 0, 0], 
           Arrowheads[0.1]}, DirectedEdge[2, 3] -> {
           Thickness[0.01481141397480707], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.1]}, DirectedEdge[3, 1] -> {
           Thickness[0.015244389552851755`], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.1]}, DirectedEdge[3, 2] -> {
           Thickness[0.019944140205025582`], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.1]}}, 
       VertexLabels -> {3 -> "A3", 2 -> "A2", 1 -> "A1"}, 
       VertexSize -> {
        3 -> 0.030583123441595774`, 2 -> 0.02740833753694241, 1 -> 
         0.0200012217463353}, 
       EdgeWeight -> {-0.4432808920027687, 
        0.2777632354234991, -0.03285438694149606, 0.2701990581304587, 
        0.2492287876018253, 0.3260644754469351}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], {
         {RGBColor[
           Rational[2, 3], 0, 0], Thickness[0.01773231883372137], Arrowheads[
          0.1], ArrowBox[
           BezierCurveBox[{{-0.8660254037844384, -0.4999999999999994}, {
           7.470730829510974*^-15, -0.2151802710442648}, {
           0.8660254037844389, -0.5000000000000012}}], 
           0.020399597244776385`]}, 
         InsetBox["\<\"\"\>", {4.718447854656915*^-16, -0.3787564434701789}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.011111208129369882`], Arrowheads[
          0.1], ArrowBox[
           BezierCurveBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6796738226668952, 0.3924098644779064}, {1.8369701987210297`*^-16, 1.}}], 
           0.020399597244776385`]}, 
         InsetBox["\<\"\"\>", {-0.5380127018922193, 0.3106217782649111}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[
           Rational[2, 3], 0, 0], Thickness[0.0018009682537236738`], 
          Arrowheads[0.1], 
          ArrowBox[BezierCurveBox[{{
           0.8660254037844389, -0.5000000000000012}, {
           3.778300649407852*^-15, -0.7848197289558226}, \
{-0.8660254037844384, -0.4999999999999994}}], 0.020399597244776385`]}, 
         InsetBox["\<\"\"\>", {2.7755575615628914*^-17, -0.6212435565298218}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.01481141397480707], Arrowheads[
          0.1], ArrowBox[BezierCurveBox[{{
           0.8660254037844389, -0.5000000000000012}, {0.18635158111754763`, 
           0.10759013552211703`}, {1.8369701987210297`*^-16, 1.}}], 
           0.020399597244776385`]}, 
         InsetBox["\<\"\"\>", {0.3280127018922195, 0.18937822173508861}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.015244389552851755`], Arrowheads[
          0.1], ArrowBox[BezierCurveBox[{{1.8369701987210297`*^-16, 
           1.}, {-0.18635158111754363`, 
           0.10759013552215828`}, {-0.8660254037844384, \
-0.4999999999999994}}], 0.020399597244776385`]}, 
         InsetBox["\<\"\"\>", {-0.32801270189221915, 0.18937822173508967}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.019944140205025582`], Arrowheads[
          0.1], 
          ArrowBox[BezierCurveBox[{{1.8369701987210297`*^-16, 1.}, {
           0.6796738226668931, 0.3924098644778326}, {
           0.8660254037844389, -0.5000000000000012}}], 
           0.020399597244776385`]}, 
         InsetBox["\<\"\"\>", {0.5380127018922198, 0.31062177826491016}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
          0.017321566139052117], 
         InsetBox["\<\"A1\"\>", 
          Offset[{2, 2}, {-0.8487038376453863, -0.4826784338609473}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8660254037844389, -0.5000000000000012}, 
          0.02373631658249073], 
         InsetBox["\<\"A2\"\>", 
          Offset[{2, 2}, {0.8897617203669297, -0.47626368341751046}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8369701987210297*^-16, 1.}, 0.026485761827497303], 
         InsetBox["\<\"A3\"\>", 
          Offset[{2, 2}, {0.026485761827497487, 1.0264857618274974}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{227.36328125, Automatic}]], "Output",
 CellChangeTimes->{{3.686729281312756*^9, 3.68672928992003*^9}, 
   3.6872093340898333`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"displayGraph", "[", 
  RowBox[{"randomGameState", ",", "False", ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Coventry\"",RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             
             RowBox[{"\"Coventry\"", ",", "\"Coventry\"", ",", 
               "\"UnitedKingdom\""}], "}"}]}], "]"}],
       "\"Entity[\\\"City\\\", {\\\"Coventry\\\", \\\"Coventry\\\", \
\\\"UnitedKingdom\\\"}]\"","\"city\""},
      "Entity"], ",", 
     TemplateBox[{"\"Sarajevo\"",RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             
             RowBox[{"\"Sarajevo\"", ",", "\"FederacijaBosnaIHercegovina\"", 
               ",", "\"BosniaHerzegovina\""}], "}"}]}], "]"}],
       "\"Entity[\\\"City\\\", {\\\"Sarajevo\\\", \
\\\"FederacijaBosnaIHercegovina\\\", \\\"BosniaHerzegovina\\\"}]\"",
       "\"city\""},
      "Entity"], ",", 
     TemplateBox[{"\"Berlin\"",RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             RowBox[{"\"Berlin\"", ",", "\"Berlin\"", ",", "\"Germany\""}], 
             "}"}]}], "]"}],
       "\"Entity[\\\"City\\\", {\\\"Berlin\\\", \\\"Berlin\\\", \\\"Germany\\\
\"}]\"","\"city\""},
      "Entity"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.678374252172105*^9, 3.678374254598386*^9}, {
   3.6783743547704773`*^9, 3.678374355835231*^9}, 3.686729347125188*^9}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3}, {
       SparseArray[
       Automatic, {3, 3}, 0, {
        1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}], Null}, {
      EdgeLabels -> {""}, EdgeStyle -> {DirectedEdge[2, 1] -> {
           Thickness[0.009347133021510303], 
           RGBColor[
            Rational[2, 3], 0, 0], 
           Arrowheads[0.04]}, DirectedEdge[1, 3] -> {
           Thickness[0.0014367213853318042`], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}, DirectedEdge[1, 2] -> {
           Thickness[0.0018793898024598013`], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}, DirectedEdge[2, 3] -> {
           Thickness[0.008221801294828987], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}, DirectedEdge[3, 1] -> {
           Thickness[0.0027097282799431496`], 
           RGBColor[
            Rational[2, 3], 0, 0], 
           Arrowheads[0.04]}, DirectedEdge[3, 2] -> {
           Thickness[0.05051198256766633], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}}, 
       VertexLabels -> {3 -> "A3", 2 -> "A2", 1 -> "A1"}, 
       VertexSize -> {
        3 -> 0.2951817992042468, 2 -> 0.084928450133268, 1 -> 
         0.09841527035326214}, 
       EdgeWeight -> {0.04774131584747269, 
        0.03649640396695261, -0.27514728594608084`, 
        0.2420214098434477, -0.02294965583284652, 0.4278040067497123}, 
       VertexCoordinates -> {{-1.55, 52.4166667}, {18.38, 43.85}, {13.38, 
        52.52}}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.0018793898024598013`], Arrowheads[
          0.04], ArrowBox[BezierCurveBox[{{-1.55, 52.4166667}, {
           9.8237090730166, 51.410637441374725`}, {18.38, 43.85}}], 
           0.09052928932500742]}, 
         InsetBox["\<\"\"\>", {9.014666669000002, 49.528433350000014}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.0014367213853318042`], Arrowheads[
          0.04], ArrowBox[BezierCurveBox[{{-1.55, 52.4166667}, {
           5.898007794939192, 54.92343370543852}, {13.38, 52.52}}], 
           0.09052928932500742]}, 
         InsetBox["\<\"\"\>", {5.907766669, 53.51343335}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[
           Rational[2, 3], 0, 0], Thickness[0.009347133021510303], Arrowheads[
          0.04], ArrowBox[BezierCurveBox[{{18.38, 43.85}, {7.006290926983371, 
           44.85602925859888}, {-1.55, 52.4166667}}], 0.09052928932500742]}, 
         InsetBox["\<\"\"\>", {7.815333330999996, 46.73823335}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.008221801294828987], Arrowheads[
          0.04], ArrowBox[BezierCurveBox[{{18.38, 43.85}, {
           14.454298721922404`, 47.3627962641292}, {13.38, 52.52}}], 
           0.09052928932500742]}, 
         InsetBox["\<\"\"\>", {15.273100000000003, 47.83500000000001}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[
           Rational[2, 3], 0, 0], Thickness[0.0027097282799431496`], 
          Arrowheads[0.04], 
          ArrowBox[BezierCurveBox[{{13.38, 52.52}, {5.931992205060822, 
           50.013232994565016`}, {-1.55, 52.4166667}}], 0.09052928932500742]},
          InsetBox["\<\"\"\>", {5.922233331, 51.423233350000004}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.05051198256766633], Arrowheads[
          0.04], ArrowBox[BezierCurveBox[{{13.38, 52.52}, {
           17.305701278077628`, 49.00720373604482}, {18.38, 43.85}}], 
           0.09052928932500742]}, 
         InsetBox["\<\"\"\>", {16.486900000000006, 48.535000000000004}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{-1.55, 52.4166667}, 0.4924917349238374], 
         InsetBox["\<\"A1\"\>", 
          Offset[{2, 2}, {-1.0575082650761627, 52.90915843492384}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{18.38, 43.85}, 0.4250007097515366], 
         InsetBox["\<\"A2\"\>", 
          Offset[{2, 2}, {18.805000709751535, 44.27500070975154}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{13.38, 52.52}, 1.4771548753177879], 
         InsetBox["\<\"A3\"\>", 
          Offset[{2, 2}, {14.85715487531779, 53.99715487531779}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{245.8515625, Automatic}]], "Output",
 CellChangeTimes->{
  3.678374266154221*^9, {3.6783743374174757`*^9, 3.6783743564439*^9}, 
   3.678383726603332*^9, 3.678383759959559*^9, 3.678383841412696*^9, {
   3.686729350259759*^9, 3.686729356536235*^9}, {3.687209353724889*^9, 
   3.687209357742984*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Display line of play", "Subsubsection",
 CellChangeTimes->{{3.6777653412336483`*^9, 3.677765344640573*^9}, {
  3.687212760494231*^9, 3.687212761731448*^9}}],

Cell["Display a sequence of game states:", "Text",
 CellChangeTimes->{{3.677765929956317*^9, 3.6777659459248247`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"displayLineOfPlay", "[", 
   RowBox[{"lineOfPlay_", ",", "showMetadataQ_"}], "]"}], " ", ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Magnify", "[", 
      RowBox[{
       RowBox[{"displayGraph", "[", 
        RowBox[{"#", ",", "showMetadataQ"}], "]"}], ",", "0.60"}], "]"}], 
     "&"}], ",", "lineOfPlay"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.677759026469448*^9, 3.6777590736528683`*^9}, {
  3.6777649466276817`*^9, 3.677764956355558*^9}, {3.6777653949504213`*^9, 
  3.677765396555586*^9}, {3.677771049868682*^9, 3.677771080784404*^9}, {
  3.677771275823743*^9, 3.67777130912608*^9}, {3.6781101512026453`*^9, 
  3.6781101512559557`*^9}, {3.687212746347789*^9, 3.687212753409547*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tactic plot", "Subsubsection",
 CellChangeTimes->{{3.6771722562435923`*^9, 3.677172257716918*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"randomMatrixNear", "[", 
   RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.677172262845128*^9, 3.6771722912620277`*^9}, {
  3.68672941508459*^9, 3.686729423759966*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.9758388266745901`", ",", 
     RowBox[{"-", "0.014517334376740737`"}], ",", "0.013843017110422911`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.017320878736075684`", ",", "0.9850977854253202`", ",", 
     RowBox[{"-", "0.007798909111170956`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.0068402945893342474`"}], ",", 
     RowBox[{"-", "0.00038488019793882385`"}], ",", "0.9783580737784062`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6771722826445847`*^9, 3.677172291690769*^9}, {
  3.68672941780672*^9, 3.68672942498578*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.677172294334489*^9, 3.6771722985424423`*^9}, {
   3.677172413943377*^9, 3.6771725022436113`*^9}, {3.677172549115293*^9, 
   3.677172576072569*^9}, {3.677172613322613*^9, 3.677172644795217*^9}, 
   3.677172723620098*^9, {3.686729428458722*^9, 3.686729428894538*^9}}],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{0.7095719990684035, 0.8380432125173178, 0.9041321394633852}, {
   0.8405899974222661, 0.9121012621986085, 0.9481433161214965}, {
   0.9679355125448261, 0.45185203501713145`, 0.0015964011162712408`}}, {{
   0.9367854021808102, 0.8795726740532294, 0.6941429452590351}, {1., 0.42, 
   0.}, {0.5846819505853791, 0.767448992398995, 0.8621794455153294}}, {{
   0.9370197328636334, 0.4825629733523824, 0.0031356112864774147`}, {
   0.45337074209276795`, 0.6932252054045464, 0.8180697745787484}, {
   0.9466227482815871, 0.9167454748038975, 0.7908326045440806}}}, {{0, 0}, {3,
    3}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{2.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {0.5, 
       FormBox["3", TraditionalForm]}}, {{2.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {0.5, 
       FormBox["3", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{149.70703125, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{
  3.6771722991573877`*^9, {3.677172422849057*^9, 3.677172444724011*^9}, {
   3.677172482555401*^9, 3.6771725028933163`*^9}, {3.677172549707896*^9, 
   3.677172576504944*^9}, {3.677172638967456*^9, 3.677172645345767*^9}, 
   3.677172724039609*^9, 3.686729429852742*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experimentation", "Section",
 CellChangeTimes->{{3.673302332798386*^9, 3.673302334644128*^9}}],

Cell[CellGroupData[{

Cell["Tests", "Subsection",
 CellChangeTimes->{{3.673301113513692*^9, 3.673301113924292*^9}, {
  3.674470721205078*^9, 3.674470722807807*^9}}],

Cell[CellGroupData[{

Cell["Parameter Explorer", "Subsubsection",
 CellChangeTimes->{{3.678383262865324*^9, 3.6783832725089817`*^9}}],

Cell["\<\
A widget for exploring parameter space for a simple scenario.  Moving the \
\[OpenCurlyDoubleQuote]redo\[CloseCurlyDoubleQuote] slider generates a new \
simulation without altering any of the other variables.  TODO: stop this from \
auto-updating continuously.\
\>", "Text",
 CellChangeTimes->{{3.678875830612668*^9, 3.6788758733056173`*^9}, {
  3.687214265962669*^9, 3.6872142763962584`*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Alpha]", "=", "alpha"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Beta]", "=", "beta"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Mu]", "=", "mu"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Delta]", "=", "delta"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Sigma]", "=", "sigma"}], ";", "\[IndentingNewLine]", 
      RowBox[{"breadth", "=", "bre"}], ";", "\[IndentingNewLine]", 
      RowBox[{"depth", "=", "dep"}], ";", "\[IndentingNewLine]", 
      RowBox[{"probes", " ", "=", " ", "prob"}], ";", "\[IndentingNewLine]", 
      RowBox[{"nearness", "=", "near"}], ";", "\[IndentingNewLine]", 
      RowBox[{"discountVector", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\[Delta]", "^", "i"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", 
           RowBox[{"depth", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"showLinesOfPlay", "[", 
        RowBox[{
         RowBox[{"runFrame", "[", 
          RowBox[{"newState", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.8", ",", "0.2", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.2", ",", "0.8", ",", 
                RowBox[{"-", "0.1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0.9"}], "}"}]}], "}"}]}], "]"}], 
          "]"}], ",", "False"}], "]"}], " ", "//", " ", "Column"}]}]}], "]"}],
    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"alpha", ",", "2.5", ",", "\"\<\[Alpha]\>\""}], "}"}], ",", "2",
      ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"beta", ",", "1.1", ",", "\"\<\[Beta]\>\""}], "}"}], ",", "1", 
     ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mu", ",", "3", ",", "\"\<\[Mu]\>\""}], "}"}], ",", "1", ",", 
     "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"delta", ",", "0.8", ",", "\"\<\[Delta]\>\""}], "}"}], ",", 
     "0.001", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigma", ",", "0.01", ",", "\"\<\[Sigma]\>\""}], "}"}], ",", 
     "0.001", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bre", ",", "15", ",", "\"\<breadth\>\""}], "}"}], ",", "1", 
     ",", "25", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dep", ",", "5", ",", "\"\<depth\>\""}], "}"}], ",", "1", ",", 
     "15", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"prob", ",", "5", ",", "\"\<probes\>\""}], "}"}], ",", "1", ",",
      "15", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"near", ",", "0.05", ",", "\"\<nearness\>\""}], "}"}], ",", 
     "0.001", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"redo", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.677766233683094*^9, 3.677766316459775*^9}, {
   3.677766523510138*^9, 3.677766553150257*^9}, {3.67776659967635*^9, 
   3.677766754420394*^9}, {3.677766817373365*^9, 3.6777668211635647`*^9}, {
   3.677766898962638*^9, 3.677766900631469*^9}, {3.6777671518196583`*^9, 
   3.677767156225163*^9}, {3.677767637299942*^9, 3.677767640425297*^9}, {
   3.677768525961321*^9, 3.677768549085156*^9}, {3.677768816827176*^9, 
   3.677768838155078*^9}, {3.677768951598105*^9, 3.6777689538421097`*^9}, {
   3.6777690014171677`*^9, 3.6777690026004953`*^9}, 3.678124088570122*^9, {
   3.6781241989440527`*^9, 3.67812422357856*^9}, {3.678374772001766*^9, 
   3.678374775139126*^9}, 3.67837581405986*^9, 3.6867294915732937`*^9, 
   3.6867295263177013`*^9, {3.68721299489039*^9, 3.687213058791175*^9}, {
   3.687213120444337*^9, 3.68721312209617*^9}, {3.687213214272966*^9, 
   3.687213220410165*^9}, {3.6872132618825283`*^9, 3.687213263584784*^9}, {
   3.6872134637401457`*^9, 3.687213618273601*^9}, {3.687213650913621*^9, 
   3.6872137753203897`*^9}, 3.687213917587751*^9, {3.687214159166333*^9, 
   3.687214189176859*^9}, {3.687214344639974*^9, 3.6872143480703287`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["WWI", "Subsubsection",
 CellChangeTimes->{{3.678375581863112*^9, 3.6783755821119843`*^9}}],

Cell["Very preliminary: Europe (subset), August 1914.", "Text",
 CellChangeTimes->{{3.67838454905685*^9, 3.6783845570083237`*^9}, {
  3.6783869272980623`*^9, 3.678386936791162*^9}, {3.678886464493853*^9, 
  3.6788864724509153`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"wwiCities", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Coventry\"",RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             
             RowBox[{"\"Coventry\"", ",", "\"Coventry\"", ",", 
               "\"UnitedKingdom\""}], "}"}]}], "]"}],
       "\"Entity[\\\"City\\\", {\\\"Coventry\\\", \\\"Coventry\\\", \
\\\"UnitedKingdom\\\"}]\"","\"city\""},
      "Entity"], ",", 
     TemplateBox[{"\"Moscow\"",RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             RowBox[{"\"Moscow\"", ",", "\"Moscow\"", ",", "\"Russia\""}], 
             "}"}]}], "]"}],
       "\"Entity[\\\"City\\\", {\\\"Moscow\\\", \\\"Moscow\\\", \
\\\"Russia\\\"}]\"","\"city\""},
      "Entity"], ",", 
     TemplateBox[{"\"Berlin\"",RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             RowBox[{"\"Berlin\"", ",", "\"Berlin\"", ",", "\"Germany\""}], 
             "}"}]}], "]"}],
       "\"Entity[\\\"City\\\", {\\\"Berlin\\\", \\\"Berlin\\\", \\\"Germany\\\
\"}]\"","\"city\""},
      "Entity"], ",", 
     TemplateBox[{"\"Bourges\"",RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             RowBox[{"\"Bourges\"", ",", "\"Centre\"", ",", "\"France\""}], 
             "}"}]}], "]"}],
       "\"Entity[\\\"City\\\", {\\\"Bourges\\\", \\\"Centre\\\", \\\"France\\\
\"}]\"","\"city\""},
      "Entity"], ",", 
     TemplateBox[{"\"Vienna\"",RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             RowBox[{"\"Vienna\"", ",", "\"Vienna\"", ",", "\"Austria\""}], 
             "}"}]}], "]"}],
       "\"Entity[\\\"City\\\", {\\\"Vienna\\\", \\\"Vienna\\\", \\\"Austria\\\
\"}]\"","\"city\""},
      "Entity"], ",", 
     TemplateBox[{"\"Rome\"",RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             RowBox[{"\"Rome\"", ",", "\"Lazio\"", ",", "\"Italy\""}], 
             "}"}]}], "]"}],
       "\"Entity[\\\"City\\\", {\\\"Rome\\\", \\\"Lazio\\\", \
\\\"Italy\\\"}]\"","\"city\""},
      "Entity"], ",", 
     TemplateBox[{"\"Brussels\"",RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             
             RowBox[{"\"Brussels\"", ",", "\"Brussels\"", ",", 
               "\"Belgium\""}], "}"}]}], "]"}],
       "\"Entity[\\\"City\\\", {\\\"Brussels\\\", \\\"Brussels\\\", \
\\\"Belgium\\\"}]\"","\"city\""},
      "Entity"], ",", 
     TemplateBox[{"\"Istanbul\"",RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             RowBox[{"\"Istanbul\"", ",", "\"Istanbul\"", ",", "\"Turkey\""}],
              "}"}]}], "]"}],
       "\"Entity[\\\"City\\\", {\\\"Istanbul\\\", \\\"Istanbul\\\", \
\\\"Turkey\\\"}]\"","\"city\""},
      "Entity"], ",", 
     TemplateBox[{"\"Sarajevo\"",RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             
             RowBox[{"\"Sarajevo\"", ",", "\"FederacijaBosnaIHercegovina\"", 
               ",", "\"BosniaHerzegovina\""}], "}"}]}], "]"}],
       "\"Entity[\\\"City\\\", {\\\"Sarajevo\\\", \
\\\"FederacijaBosnaIHercegovina\\\", \\\"BosniaHerzegovina\\\"}]\"",
       "\"city\""},
      "Entity"]}], "}"}]}], ";", 
  RowBox[{"wwiSizes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0.8", ",", "0.6", ",", "0.6", ",", "0.4", ",", "0.3", ",", "0.2", ",", 
     "0.05", ",", "0.1", ",", "0.02"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wwiTactics", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.94", ",", "0.02", ",", "0", ",", "0.03", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "0.02", ",", "0.94", ",", "0", ",", "0.02", ",", "0", ",", "0", ",", 
       "0", ",", 
       RowBox[{"-", "0.05"}], ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0.90", ",", "0", ",", "0.05", ",", "0.01", ",", 
       "0", ",", "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "0.03", ",", "0.02", ",", "0", ",", "0.98", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0.05"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0.05", ",", "0", ",", "0.94", ",", "0.01", ",", 
       "0", ",", "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0.01", ",", "0", ",", "0.01", ",", "1", ",", "0", 
       ",", "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.02", ",", "0", ",", 
       RowBox[{"-", "0.05"}], ",", "0", ",", "0", ",", "0", ",", "1", ",", 
       "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "0.01"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0.95", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0.01", ",", "0.05", ",", "0", ",", "0.02", ",", 
       RowBox[{"-", "0.1"}], ",", "0", ",", "0", ",", "0", ",", "0.95"}], 
      "}"}]}], "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wwi", " ", "=", " ", 
   RowBox[{"newState", "[", 
    RowBox[{"wwiSizes", ",", "wwiTactics"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"displayGraph", "[", 
  RowBox[{"wwi", ",", "False", ",", "wwiCities"}], "]"}]}], "Input",
 CellChangeTimes->{{3.678374851105981*^9, 3.6783748821323442`*^9}, {
   3.678375731399824*^9, 3.6783757339506273`*^9}, {3.678382966277151*^9, 
   3.6783830902913933`*^9}, 3.6783831308060923`*^9, {3.678383177994729*^9, 
   3.678383230679089*^9}, {3.678383352957178*^9, 3.6783833650220118`*^9}, {
   3.678383471213975*^9, 3.678383490547167*^9}, {3.678383561155072*^9, 
   3.678383569792616*^9}, {3.678383624492806*^9, 3.678383627497592*^9}, {
   3.6783839913124533`*^9, 3.678384030505391*^9}, {3.678384066925509*^9, 
   3.678384076621442*^9}, {3.67838422087831*^9, 3.678384221886009*^9}, {
   3.67838429911758*^9, 3.678384301924704*^9}, {3.678384342578432*^9, 
   3.678384371637353*^9}, {3.6783867482371893`*^9, 3.678386754689527*^9}, {
   3.6783868107139378`*^9, 3.678386894588925*^9}, {3.6783872995746317`*^9, 
   3.678387335931562*^9}, {3.678387372021626*^9, 3.678387380986939*^9}, {
   3.678387413772222*^9, 3.678387419231184*^9}, {3.678387463667588*^9, 
   3.67838747703538*^9}, {3.67838768053891*^9, 3.678387703248682*^9}, {
   3.6783877335494556`*^9, 3.678387742226447*^9}, {3.678387805066246*^9, 
   3.6783878225550528`*^9}, 3.686729456703751*^9}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {
       SparseArray[
       Automatic, {9, 9}, 0, {
        1, {{0, 4, 8, 11, 14, 17, 19, 19, 20, 21}, {{2}, {4}, {7}, {9}, {1}, {
          4}, {8}, {9}, {5}, {6}, {7}, {1}, {2}, {9}, {3}, {6}, {9}, {3}, {
          5}, {2}, {4}}}, Pattern}], Null}, {
      EdgeLabels -> {""}, EdgeStyle -> {DirectedEdge[3, 7] -> {
           Thickness[0.006], 
           RGBColor[
            Rational[2, 3], 0, 0], 
           Arrowheads[0.04]}, DirectedEdge[6, 3] -> {
           Thickness[0.0004], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}, DirectedEdge[8, 2] -> {
           Thickness[0.0010000000000000002`], 
           RGBColor[
            Rational[2, 3], 0, 0], 
           Arrowheads[0.04]}, DirectedEdge[2, 4] -> {
           Thickness[0.0024000000000000002`], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}, DirectedEdge[4, 2] -> {
           Thickness[0.0016], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}, DirectedEdge[1, 2] -> {
           Thickness[0.0032], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}, DirectedEdge[4, 9] -> {
           Thickness[0.0016], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}, DirectedEdge[1, 4] -> {
           Thickness[0.0048000000000000004`], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}, DirectedEdge[2, 1] -> {
           Thickness[0.0024000000000000002`], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}, DirectedEdge[2, 8] -> {
           Thickness[0.0012000000000000001`], 
           RGBColor[
            Rational[2, 3], 0, 0], 
           Arrowheads[0.04]}, DirectedEdge[5, 9] -> {
           Thickness[0.006], 
           RGBColor[
            Rational[2, 3], 0, 0], 
           Arrowheads[0.04]}, DirectedEdge[2, 9] -> {
           Thickness[0.006], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}, DirectedEdge[6, 5] -> {
           Thickness[0.0004], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}, DirectedEdge[1, 9] -> {
           Thickness[0.0016], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}, DirectedEdge[5, 6] -> {
           Thickness[0.0006000000000000001], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}, DirectedEdge[1, 7] -> {
           Thickness[0.0032], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}, DirectedEdge[5, 3] -> {
           Thickness[0.003], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}, DirectedEdge[4, 1] -> {
           Thickness[0.0024000000000000002`], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}, DirectedEdge[9, 4] -> {
           Thickness[0.0002], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}, DirectedEdge[3, 5] -> {
           Thickness[0.006], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}, DirectedEdge[3, 6] -> {
           Thickness[0.0012000000000000001`], 
           RGBColor[0, 
            Rational[4, 9], 0], 
           Arrowheads[0.04]}}, 
       VertexLabels -> {
        9 -> "A9", 5 -> "A5", 6 -> "A6", 4 -> "A4", 1 -> "A1", 7 -> "A7", 8 -> 
         "A8", 2 -> "A2", 3 -> "A3"}, 
       VertexSize -> {
        1 -> 0.4, 9 -> 0.01, 4 -> 0.2, 2 -> 0.3, 5 -> 0.15, 8 -> 0.05, 3 -> 
         0.3, 7 -> 0.025, 6 -> 0.1}, 
       EdgeWeight -> {0.02, 0.03, 0.02, 0.01, 0.02, 0.02, -0.01, 0.05, 0.05, 
        0.01, -0.05, 0.03, 0.02, 0.02, 0.05, 0.01, -0.1, 0.01, 0.01, -0.05, 
        0.05}, VertexCoordinates -> {{-1.55, 52.4166667}, {37.62, 55.75}, {
        13.38, 52.52}, {2.39, 47.08}, {16.37, 48.22}, {12.5, 41.89}, {4.33, 
        50.83}, {29., 41.1}, {18.38, 43.85}}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.0032], Arrowheads[0.04], 
          ArrowBox[BezierCurveBox[{{-1.55, 52.4166667}, {17.486864181537396`, 
           60.5244774171707}, {37.62, 55.75}}], 0.1121713637223378]}, 
         InsetBox["\<\"\"\>", {17.801666668999996, 56.82523335000001}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.0048000000000000004`], Arrowheads[
          0.04], ArrowBox[BezierCurveBox[{{-1.55, 52.4166667}, {
           1.2975654596152724`, 50.396229893932485`}, {2.39, 47.08}}], 
           0.1121713637223378]}, 
         InsetBox["\<\"\"\>", {0.7935666690000055, 50.02413335}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.0032], Arrowheads[0.04], 
          ArrowBox[{{-1.55, 52.4166667}, {4.33, 50.83}}, 0.1121713637223378]},
          InsetBox["\<\"\"\>", {1.3900000000000001, 51.623333349999996}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.0016], Arrowheads[0.04], 
          ArrowBox[{{-1.55, 52.4166667}, {18.38, 43.85}}, 
           0.1121713637223378]}, 
         InsetBox["\<\"\"\>", {8.415, 48.13333335}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.0024000000000000002`], Arrowheads[
          0.04], ArrowBox[BezierCurveBox[{{37.62, 55.75}, {
           18.583135818462342`, 47.64218928281391}, {-1.55, 52.4166667}}], 
           0.1121713637223378]}, 
         InsetBox["\<\"\"\>", {18.268333330999994, 51.34143335}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.0024000000000000002`], Arrowheads[
          0.04], ArrowBox[BezierCurveBox[{{37.62, 55.75}, {
           21.430701278077798`, 45.62175247673023}, {2.39, 47.08}}], 
           0.1121713637223378]}, 
         InsetBox["\<\"\"\>", {20.61189999999999, 48.94890000000001}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[
           Rational[2, 3], 0, 0], Thickness[0.0012000000000000001`], 
          Arrowheads[0.04], 
          ArrowBox[BezierCurveBox[{{37.62, 55.75}, {35.71905694623273, 
           47.007520759463226`}, {29., 41.1}}], 0.1121713637223378]}, 
         InsetBox["\<\"\"\>", {34.3355, 47.821600000000004}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.006], Arrowheads[0.04], 
          ArrowBox[{{37.62, 55.75}, {18.38, 43.85}}, 0.1121713637223378]}, 
         InsetBox["\<\"\"\>", {28., 49.8}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.006], Arrowheads[0.04], 
          ArrowBox[BezierCurveBox[{{13.38, 52.52}, {15.582095212887337`, 
           50.86167783433665}, {16.37, 48.22}}], 0.1121713637223378]}, 
         InsetBox["\<\"\"\>", {15.176000000000005, 50.5793}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.0012000000000000001`], Arrowheads[
          0.04], ArrowBox[BezierCurveBox[{{13.38, 52.52}, {
           14.688005142556532`, 47.06029214245593}, {12.5, 41.89}}], 
           0.1121713637223378]}, 
         InsetBox["\<\"\"\>", {13.6841, 47.1434}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[
           Rational[2, 3], 0, 0], Thickness[0.006], Arrowheads[0.04], 
          ArrowBox[{{13.38, 52.52}, {4.33, 50.83}}, 0.1121713637223378]}, 
         InsetBox["\<\"\"\>", {8.855, 51.675}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.0024000000000000002`], Arrowheads[
          0.04], ArrowBox[BezierCurveBox[{{2.39, 47.08}, {-0.457565459615273, 
           49.100436806100696`}, {-1.55, 52.4166667}}], 0.1121713637223378]}, 
         InsetBox["\<\"\"\>", {0.046433331000000966, 49.472533350000006}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.0016], Arrowheads[0.04], 
          ArrowBox[BezierCurveBox[{{2.39, 47.08}, {18.579298721922683`, 
           57.20824752328431}, {37.62, 55.75}}], 0.1121713637223378]}, 
         InsetBox["\<\"\"\>", {19.3981, 53.8811}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.0016], Arrowheads[0.04], 
          ArrowBox[BezierCurveBox[{{2.39, 47.08}, {10.916143613401342`, 
           48.09440754757223}, {18.38, 43.85}}], 0.1121713637223378]}, 
         InsetBox["\<\"\"\>", {10.6111, 46.58430000000001}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.003], Arrowheads[0.04], 
          ArrowBox[BezierCurveBox[{{16.37, 48.22}, {14.16790478711265, 
           49.878322167021935`}, {13.38, 52.52}}], 0.1121713637223378]}, 
         InsetBox["\<\"\"\>", {14.574000000000002, 50.1607}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.0006000000000000001], Arrowheads[
          0.04], ArrowBox[BezierCurveBox[{{16.37, 48.22}, {
           15.475909929669168`, 44.418614308410916`}, {12.5, 41.89}}], 
           0.1121713637223378]}, 
         InsetBox["\<\"\"\>", {14.8781, 44.7841}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[
           Rational[2, 3], 0, 0], Thickness[0.006], Arrowheads[0.04], 
          ArrowBox[{{16.37, 48.22}, {18.38, 43.85}}, 0.1121713637223378]}, 
         InsetBox["\<\"\"\>", {17.375, 46.035}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.0004], Arrowheads[0.04], 
          ArrowBox[BezierCurveBox[{{12.5, 41.89}, {11.191994857443447`, 
           47.34970785732649}, {13.38, 52.52}}], 0.1121713637223378]}, 
         InsetBox["\<\"\"\>", {12.1959, 47.266600000000004}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.0004], Arrowheads[0.04], 
          ArrowBox[BezierCurveBox[{{12.5, 41.89}, {13.39409007033085, 
           45.69138569163455}, {16.37, 48.22}}], 0.1121713637223378]}, 
         InsetBox["\<\"\"\>", {13.991900000000003, 45.325900000000004}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[
           Rational[2, 3], 0, 0], Thickness[0.0010000000000000002`], 
          Arrowheads[0.04], 
          ArrowBox[BezierCurveBox[{{29., 41.1}, {30.9009430537674, 
           49.84247924052621}, {37.62, 55.75}}], 0.1121713637223378]}, 
         InsetBox["\<\"\"\>", {32.284499999999994, 49.028400000000005}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           Rational[4, 9], 0], Thickness[0.0002], Arrowheads[0.04], 
          ArrowBox[BezierCurveBox[{{18.38, 43.85}, {9.853856386598672, 
           42.835592452508806`}, {2.39, 47.08}}], 0.1121713637223378]}, 
         InsetBox["\<\"\"\>", {10.158900000000001, 44.345699999999994}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{-1.55, 52.4166667}, 0.8444193271118325], 
         InsetBox["\<\"A1\"\>", 
          Offset[{2, 2}, {-0.7055806728881675, 53.26108602711183}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{37.62, 55.75}, 0.6333144953338743], 
         InsetBox["\<\"A2\"\>", 
          Offset[{2, 2}, {38.253314495333875, 56.38331449533388}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{13.38, 52.52}, 0.6333144953338743], 
         InsetBox["\<\"A3\"\>", 
          Offset[{2, 2}, {14.013314495333875, 53.15331449533388}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.39, 47.08}, 0.42220966355591627], 
         InsetBox["\<\"A4\"\>", 
          Offset[{2, 2}, {2.812209663555916, 47.50220966355592}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{16.37, 48.22}, 0.31665724766693715], 
         InsetBox["\<\"A5\"\>", 
          Offset[{2, 2}, {16.68665724766694, 48.53665724766694}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{12.5, 41.89}, 0.21110483177795814], 
         InsetBox["\<\"A6\"\>", 
          Offset[{2, 2}, {12.711104831777957, 42.10110483177796}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.33, 50.83}, 0.052776207944489534], 
         InsetBox["\<\"A7\"\>", 
          Offset[{2, 2}, {4.38277620794449, 50.88277620794449}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{29., 41.1}, 0.10555241588897907],
          InsetBox["\<\"A8\"\>", 
          Offset[{2, 2}, {29.10555241588898, 41.20555241588898}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{18.38, 43.85}, 0.021110483177795812], 
         InsetBox["\<\"A9\"\>", 
          Offset[{2, 2}, {18.401110483177796, 43.871110483177794}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{556.3984375, Automatic}]], "Output",
 CellChangeTimes->{{3.678387683431984*^9, 3.678387703758106*^9}, {
  3.678387734779831*^9, 3.67838774279382*^9}, {3.678387817546516*^9, 
  3.678387823491424*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wwiTactics", "//", " ", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.678384088620502*^9, 3.6783840927804737`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.94`", "0.02`", "0", "0.03`", "0", "0", "0", "0", "0"},
     {"0.02`", "0.94`", "0", "0.02`", "0", "0", "0", 
      RowBox[{"-", "0.05`"}], "0"},
     {"0", "0", "0.9`", "0", "0.05`", "0.01`", "0", "0", "0"},
     {"0.03`", "0.02`", "0", "0.98`", "0", "0", "0", "0", "0.05`"},
     {"0", "0", "0.05`", "0", "0.94`", "0.01`", "0", "0", "0"},
     {"0", "0", "0.01`", "0", "0.01`", "1", "0", "0", "0"},
     {"0.02`", "0", 
      RowBox[{"-", "0.05`"}], "0", "0", "0", "1", "0", "0"},
     {"0", 
      RowBox[{"-", "0.01`"}], "0", "0", "0", "0", "0", "0.95`", "0"},
     {"0.01`", "0.05`", "0", "0.02`", 
      RowBox[{"-", "0.1`"}], "0", "0", "0", "0.95`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.678383155746355*^9, {3.678383186753874*^9, 3.678383231525329*^9}, {
   3.678383361339888*^9, 3.678383365818277*^9}, {3.678383482511106*^9, 
   3.6783834912433653`*^9}, 3.678383570719734*^9, 3.678383628116755*^9, {
   3.678383737697109*^9, 3.6783837932525663`*^9}, {3.678383846343636*^9, 
   3.678383860335359*^9}, 3.678384031088212*^9, {3.678384077518716*^9, 
   3.678384093225088*^9}, 3.678384225635154*^9, 3.678384304802112*^9, 
   3.678384380077129*^9, 3.6783868478552923`*^9, {3.6783868858624687`*^9, 
   3.67838689657758*^9}, 3.678387529121386*^9, 3.678387830660769*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.6783757990093193`*^9, {3.6783758351883183`*^9, 3.678375843087186*^9}, 
   3.6783759049174356`*^9, 3.678383060644617*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1188, 800},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 137, 1, 65, "Chapter"],
Cell[CellGroupData[{
Cell[742, 27, 90, 1, 64, "Section"],
Cell[835, 30, 1334, 23, 87, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2206, 58, 99, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[2330, 63, 205, 3, 44, "Subsection"],
Cell[CellGroupData[{
Cell[2560, 70, 104, 1, 35, "Subsubsection"],
Cell[2667, 73, 522, 8, 49, "Text"],
Cell[CellGroupData[{
Cell[3214, 85, 557, 14, 32, "Input"],
Cell[3774, 101, 884, 22, 47, "Output"]
}, Open  ]],
Cell[4673, 126, 210, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[4908, 133, 513, 13, 32, "Input"],
Cell[5424, 148, 162, 4, 32, "Output"]
}, Open  ]],
Cell[5601, 155, 255, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[5881, 164, 182, 4, 32, "Input"],
Cell[6066, 170, 147, 2, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6262, 178, 101, 1, 35, "Subsubsection"],
Cell[6366, 181, 421, 9, 30, "Text"],
Cell[6790, 192, 838, 22, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7665, 219, 276, 4, 35, "Subsubsection"],
Cell[7944, 225, 154, 4, 30, "Text"],
Cell[8101, 231, 2923, 84, 219, "Text"],
Cell[11027, 317, 115, 1, 30, "Text"],
Cell[11145, 320, 2699, 59, 364, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[13881, 384, 168, 2, 35, "Subsubsection"],
Cell[14052, 388, 340, 8, 30, "Text"],
Cell[14395, 398, 244, 4, 32, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14688, 408, 146, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[14859, 414, 179, 2, 35, "Subsubsection"],
Cell[15041, 418, 713, 11, 49, "Text"],
Cell[15757, 431, 405, 9, 48, "Input",
 InitializationCell->True],
Cell[16165, 442, 167, 5, 31, "Text"],
Cell[16335, 449, 413, 10, 32, "Input"],
Cell[CellGroupData[{
Cell[16773, 463, 287, 6, 32, "Input"],
Cell[17063, 471, 308, 6, 32, "Output"]
}, Open  ]],
Cell[17386, 480, 639, 10, 49, "Text"],
Cell[18028, 492, 1846, 38, 133, "Input",
 InitializationCell->True],
Cell[19877, 532, 139, 1, 30, "Text"],
Cell[20019, 535, 634, 14, 48, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[20678, 553, 467, 10, 32, "Input"],
Cell[21148, 565, 734, 12, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21919, 582, 555, 11, 32, "Input"],
Cell[22477, 595, 1468, 36, 113, "Output"]
}, Open  ]],
Cell[23960, 634, 492, 10, 50, "Text"],
Cell[CellGroupData[{
Cell[24477, 648, 2112, 52, 201, "Input"],
Cell[26592, 702, 2352, 49, 499, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28993, 757, 308, 4, 29, "Subsubsection"],
Cell[29304, 763, 330, 6, 30, "Text"],
Cell[29637, 771, 850, 19, 48, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[30512, 794, 633, 16, 32, "Input"],
Cell[31148, 812, 1003, 19, 32, "Output"]
}, Open  ]],
Cell[32166, 834, 777, 14, 50, "Text"],
Cell[32946, 850, 1234, 26, 48, "Input",
 InitializationCell->True],
Cell[34183, 878, 730, 17, 32, "Input"],
Cell[34916, 897, 246, 4, 30, "Text"],
Cell[35165, 903, 423, 10, 48, "Input",
 InitializationCell->True],
Cell[35591, 915, 233, 4, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35861, 924, 153, 2, 29, "Subsubsection"],
Cell[36017, 928, 165, 2, 30, "Text"],
Cell[36185, 932, 1307, 24, 133, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[37517, 960, 618, 16, 32, "Input"],
Cell[38138, 978, 1118, 28, 35, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39305, 1012, 259, 4, 29, "Subsubsection"],
Cell[39567, 1018, 427, 7, 30, "Text"],
Cell[39997, 1027, 1727, 29, 48, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[41749, 1060, 41, 0, 32, "Input"],
Cell[41793, 1062, 1264, 32, 78, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43106, 1100, 252, 3, 29, "Subsubsection"],
Cell[43361, 1105, 1008, 15, 49, "Text"],
Cell[44372, 1122, 7547, 127, 448, "Input",
 InitializationCell->True],
Cell[51922, 1251, 116, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[52063, 1256, 498, 9, 32, "Input"],
Cell[52564, 1267, 1492, 35, 78, "Output"]
}, Open  ]],
Cell[54071, 1305, 539, 8, 49, "Text"],
Cell[54613, 1315, 3026, 64, 280, "Input",
 InitializationCell->True],
Cell[57642, 1381, 797, 21, 48, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[58464, 1406, 438, 13, 32, "Input"],
Cell[58905, 1421, 461, 13, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59415, 1440, 184, 2, 29, "Subsubsection"],
Cell[59602, 1444, 537, 9, 30, "Text"],
Cell[60142, 1455, 383, 9, 48, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[60574, 1470, 157, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[60756, 1476, 107, 1, 35, "Subsubsection"],
Cell[60866, 1479, 410, 7, 30, "Text"],
Cell[61279, 1488, 596, 16, 48, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[61900, 1508, 219, 5, 32, "Input"],
Cell[62122, 1515, 291, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62450, 1527, 276, 6, 32, "Input"],
Cell[62729, 1535, 186, 4, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[62964, 1545, 157, 2, 29, "Subsubsection"],
Cell[63124, 1549, 379, 5, 30, "Text"],
Cell[63506, 1556, 733, 16, 48, "Input",
 InitializationCell->True],
Cell[64242, 1574, 977, 28, 54, "Input"],
Cell[CellGroupData[{
Cell[65244, 1606, 258, 5, 32, "Input"],
Cell[65505, 1613, 378, 6, 32, "Output"]
}, Open  ]],
Cell[65898, 1622, 188, 4, 32, "Input"],
Cell[66089, 1628, 173, 4, 30, "Text"],
Cell[66265, 1634, 430, 11, 48, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[66732, 1650, 99, 1, 29, "Subsubsection"],
Cell[66834, 1653, 178, 4, 30, "Text"],
Cell[67015, 1659, 598, 15, 48, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[67638, 1678, 397, 10, 32, "Input"],
Cell[68038, 1690, 489, 15, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68564, 1710, 1195, 29, 32, "Input"],
Cell[69762, 1741, 1866, 37, 341, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71677, 1784, 139, 2, 29, "Subsubsection"],
Cell[71819, 1788, 265, 5, 30, "Text"],
Cell[72087, 1795, 3900, 57, 48, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[76012, 1856, 352, 6, 32, "Input"],
Cell[76367, 1864, 221, 3, 32, "Output"]
}, Open  ]],
Cell[76603, 1870, 575, 15, 48, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[77203, 1889, 196, 3, 32, "Input"],
Cell[77402, 1894, 297, 6, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[77748, 1906, 215, 3, 29, "Subsubsection"],
Cell[77966, 1911, 583, 12, 50, "Text"],
Cell[78552, 1925, 643, 16, 48, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[79220, 1945, 603, 13, 32, "Input"],
Cell[79826, 1960, 437, 6, 32, "Output"]
}, Open  ]],
Cell[80278, 1969, 383, 7, 49, "Text"],
Cell[80664, 1978, 496, 11, 48, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[81185, 1993, 349, 9, 32, "Input"],
Cell[81537, 2004, 149, 3, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81747, 2014, 102, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[81874, 2019, 104, 1, 35, "Subsubsection"],
Cell[81981, 2022, 1560, 31, 166, "Text"],
Cell[CellGroupData[{
Cell[83566, 2057, 252, 7, 32, "Input"],
Cell[83821, 2066, 918, 32, 157, "Output"]
}, Open  ]],
Cell[84754, 2101, 903, 13, 68, "Text"],
Cell[CellGroupData[{
Cell[85682, 2118, 370, 11, 32, "Input"],
Cell[86055, 2131, 971, 31, 157, "Output"]
}, Open  ]],
Cell[87041, 2165, 2451, 50, 277, "Text"],
Cell[89495, 2217, 4497, 136, 336, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94029, 2358, 155, 2, 29, "Subsubsection"],
Cell[94187, 2362, 525, 8, 49, "Text"],
Cell[94715, 2372, 1307, 25, 48, "Input",
 InitializationCell->True],
Cell[96025, 2399, 411, 7, 49, "Text"],
Cell[96439, 2408, 8058, 169, 595, "Input",
 InitializationCell->True],
Cell[104500, 2579, 88, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[104613, 2584, 331, 7, 32, "Input"],
Cell[104947, 2593, 577, 10, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105561, 2608, 253, 6, 32, "Input"],
Cell[105817, 2616, 803, 20, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106657, 2641, 289, 6, 32, "Input"],
Cell[106949, 2649, 450, 9, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107436, 2663, 286, 6, 32, "Input"],
Cell[107725, 2671, 385, 8, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108147, 2684, 285, 6, 32, "Input"],
Cell[108435, 2692, 348, 7, 32, "Output"]
}, Open  ]],
Cell[108798, 2702, 237, 6, 31, "Text"],
Cell[109038, 2710, 456, 11, 48, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[109519, 2725, 459, 12, 32, "Input"],
Cell[109981, 2739, 291, 5, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110333, 2751, 203, 3, 44, "Subsection"],
Cell[CellGroupData[{
Cell[110561, 2758, 154, 2, 35, "Subsubsection"],
Cell[110718, 2762, 586, 10, 183, "Text"],
Cell[111307, 2774, 2465, 50, 154, "Input",
 InitializationCell->True],
Cell[113775, 2826, 129, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[113929, 2832, 205, 5, 32, "Input"],
Cell[114137, 2839, 346, 6, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[114532, 2851, 127, 1, 29, "Subsubsection"],
Cell[114662, 2854, 816, 13, 87, "Text"],
Cell[115481, 2869, 453, 10, 51, "Text"],
Cell[115937, 2881, 1572, 34, 133, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[117534, 2919, 525, 11, 32, "Input"],
Cell[118062, 2932, 6575, 160, 251, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[124686, 3098, 200, 3, 29, "Subsubsection"],
Cell[124889, 3103, 606, 10, 31, "Text"],
Cell[125498, 3115, 4481, 72, 175, "Input",
 InitializationCell->True],
Cell[129982, 3189, 353, 9, 70, "Input",
 InitializationCell->True],
Cell[130338, 3200, 192, 3, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130567, 3208, 115, 1, 29, "Subsubsection"],
Cell[130685, 3211, 380, 8, 31, "Text"],
Cell[131068, 3221, 763, 20, 48, "Input",
 InitializationCell->True],
Cell[131834, 3243, 289, 5, 32, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[132172, 3254, 104, 1, 44, "Subsection"],
Cell[132279, 3257, 86, 1, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132402, 3263, 231, 4, 36, "Subsection"],
Cell[CellGroupData[{
Cell[132658, 3271, 152, 2, 35, "Subsubsection"],
Cell[132813, 3275, 923, 14, 68, "Text"],
Cell[133739, 3291, 2010, 49, 154, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[135774, 3344, 845, 20, 32, "Input"],
Cell[136622, 3366, 654, 17, 93, "Output"]
}, Open  ]],
Cell[137291, 3386, 94, 1, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137422, 3392, 183, 2, 29, "Subsubsection"],
Cell[137608, 3396, 860, 14, 50, "Text"],
Cell[138471, 3412, 366, 8, 48, "Input",
 InitializationCell->True],
Cell[138840, 3422, 14508, 288, 826, "Input",
 InitializationCell->True],
Cell[153351, 3712, 275, 6, 30, "Text"],
Cell[153629, 3720, 470, 12, 48, "Input",
 InitializationCell->True],
Cell[154102, 3734, 2466, 61, 280, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[156593, 3799, 150, 3, 32, "Input"],
Cell[156746, 3804, 5789, 126, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162572, 3935, 1447, 33, 42, "Input"],
Cell[164022, 3970, 5492, 116, 150, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[169563, 4092, 162, 2, 29, "Subsubsection"],
Cell[169728, 4096, 118, 1, 30, "Text"],
Cell[169849, 4099, 777, 17, 48, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[170663, 4121, 104, 1, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[170792, 4126, 245, 5, 32, "Input"],
Cell[171040, 4133, 646, 16, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171723, 4154, 351, 5, 32, "Input"],
Cell[172077, 4161, 1840, 37, 178, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[173990, 4206, 100, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[174115, 4211, 142, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[174282, 4217, 111, 1, 35, "Subsubsection"],
Cell[174396, 4220, 403, 7, 49, "Text"],
Cell[174802, 4229, 4611, 105, 390, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179450, 4339, 96, 1, 35, "Subsubsection"],
Cell[179549, 4342, 232, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[179806, 4349, 6803, 149, 347, "Input"],
Cell[186612, 4500, 14336, 297, 292, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200985, 4802, 141, 2, 32, "Input"],
Cell[201129, 4806, 1817, 37, 165, "Output"]
}, Open  ]],
Cell[202961, 4846, 171, 3, 32, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

